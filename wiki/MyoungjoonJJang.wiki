#summary 시간표캘린더
#labels 2013190714김명준

= Introduction =

대학생이라면 누구나 가지고 있는 시간표, 하지만 새로운 일정이 생길때마다 기존의 시간표 사진과 대조하면서 시간표를 짜는것은 불편하기만 합니다. 또한 kutime에서 시간표를 만들고 이를 사진으로 저장하며 핸드폰으로 보내는것 또한 불편합니다. 이러한 점을 개선하기 위하여 시간표와 달력을 한개의 어플로 만들 계획입니다.

= Details =

*기능 1* 캘린더의 기본화면을 시간표처럼 구성,kutime에서의 디자인을 채택

*기능 2* 일정을 짤때 [9월 첫째주 부터 12월 말까지의 월요일 1교시]같이 일정을 만들 수 있어 시간표 같은 캘린더를 만듬

*기능 3* 힘들겠지만 가능하다면 kutime과의 연동하여 자동으로 시간표를 받음

*기능 4* 시간표 마다 색을 지정할 수 있게 하여 중요한일과 덜중요한일 등등을 구분 할 수 있게 함
고대생이 사용하는 시간표
http://comp166-koreauniv.googlecode.com/files/2%EC%B0%A8%20-%20%EB%B3%B5%EC%82%AC%EB%B3%B8.JPG

이 시간표를 깔끔하게 하여 기본 ui를 만들고
http://comp166-koreauniv.googlecode.com/files/%EA%B8%B0%EB%B3%B8%20%ED%8F%AC%EB%A7%B7.png

이런식으로 시간표 말고도 일정을 만들수도 있음
http://comp166-koreauniv.googlecode.com/files/%EC%A0%9C%EB%AA%A9%20%EC%97%86%EC%9D%8C.png

=소스코드=

저는 이번 텀과제를 하면서 만든 모든 소스는 제가 직접 코드하나하나 써가면서 공부하고 모르는것은 질문하면서 하였는데요.
공부한 책은 교수님이 추천해주신

Do it안드로이드 프로그래밍이라는 책과

안드로이드 프로그래밍 정복 1,2입니다.

출처랄것까지는 없겠지만 책을보면서 공부했기때문에 출처는 책이 되겠네요.

저도 처음에는 너무 힘들어서 다른애들처럼 배낄까도 생각해봣는데 한번해보니까 그대로 복사 붙여넣기 하면 전체에서 오류가 뜨고 오류를 하나하나 지우려해도 결국은 다시 써야하더군요. 그리고 복사를 하게되면 gen폴더에 있는 R.java라는 데이터공간을 할당해주는 클래스파일이 있는것같은데 이게 바로바로 반응을 해주지 않더군요. 그렇다고 제가 직접 데이터를 할당해준다고하면 치명적인 오류가 뜰수있을것 같아서 무섭고도해서 그냥 공부하는겸 해서 직접 책을보면서 하였습니다.

=클래스 소개=

https://comp166-koreauniv.googlecode.com/files/%E3%85%87%E3%85%87.png

제 캘린더에 사용되는 클래스는 그리드뷰와 리스트뷰를 사용합니다.

그리드뷰와 리스트뷰에대한 설명은 밑에서 하기로 하겠습니다.

이 두가지 뷰의 특성상 많은 클래스를 사용하게 됩니다.

그리고 캘린더의 정보를 저장할 전역 객체로 사용되는 Schedule클래스가 존재합니다.

*1.메인클래스*

https://comp166-koreauniv.googlecode.com/files/%E3%85%81%E3%84%B7.png

https://comp166-koreauniv.googlecode.com/files/%E3%85%81%E3%85%81.png

그림을 보면 메인클래스에서 많은 전역 변수들을 사용하고 있는데요.

캘린더를 사용하는 메인클래스의 특성상 많은 정보들이 오가고 그리드뷰를 사용하는 캘린더 객체를 만들어야하는 특성상 많은 전역 변수들을 사용하게 되었습니다.

{{{

package com.example.hi;

import java.util.ArrayList;
import java.util.Calendar;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.Button;
import android.widget.GridView;
import android.widget.TextView;
import android.widget.Toast;

import android.util.Log;

public class MainActivity extends Activity implements OnItemClickListener,
		OnClickListener {
	public int pos;
	public int y;
	public int m;
	public String d;
	public static int p1 = -1;
	public static int y1;
	public static int m1;
	public static String d1;
	public static int SUNDAY = 1;
	public static int MONDAT = 2;
	public static int TUESDAY = 3;
	public static int WEDNSETAY = 4;
	public static int THURSDAY = 5;
	public static int FRIDAY = 6;
	public static int SATURDAY = 7;

	private TextView mTvCalendarTitle;
	private GridView mGvCalendar;

	private ArrayList<DayInfo> mDayList;
	private CalendarAdapter mCalendarAdapter;
	Calendar mLastMonthCalendar;
	Calendar mThisMonthCalendar;
	Calendar mNextMonthCalendar;

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		Intent intent3 = getIntent();
		p1 = intent3.getIntExtra("pos", -1);
		d1 = intent3.getStringExtra("d");
		y1 = intent3.getIntExtra("y", 0);
		m1 = intent3.getIntExtra("m", 0);

		if (p1 == -1) {
			ScheduleList.Load();
		}

		pos = p1;
		d = d1;
		y = y1;
		m = m1;

		Button bLastMonth = (Button) findViewById(R.id.b_last);
		Button bNextMonth = (Button) findViewById(R.id.b_next);

		mTvCalendarTitle = (TextView) findViewById(R.id.gv_calendar_activity_tv_title);
		mTvCalendarTitle.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				Intent intent = new Intent(getBaseContext(), List.class);
				intent.putExtra("pos", pos);
				intent.putExtra("d", d);
				intent.putExtra("y", y);
				intent.putExtra("m", m);
				startActivity(intent);
			}

		});
		mGvCalendar = (GridView) findViewById(R.id.gv_calendar_activity_gv_calendar);

		bLastMonth.setOnClickListener(this);
		bNextMonth.setOnClickListener(this);
		mGvCalendar.setOnItemClickListener(this);
		mDayList = new ArrayList<DayInfo>();
	}

	protected void onResume() {
		super.onResume();

		mThisMonthCalendar = Calendar.getInstance();
		mThisMonthCalendar.set(Calendar.DAY_OF_MONTH, 1);
		getCalendar(mThisMonthCalendar);
	}

	private void getCalendar(Calendar calendar) {
		int lastMonthStartDay;
		int dayOfMonth;
		int thisMonthLastDay;

		mDayList.clear();

		dayOfMonth = calendar.get(Calendar.DAY_OF_WEEK);
		thisMonthLastDay = calendar.getActualMaximum(Calendar.DAY_OF_MONTH);

		calendar.add(Calendar.MONTH, -1);
		Log.e("지난달 마지막일", calendar.get(Calendar.DAY_OF_MONTH) + "");

		lastMonthStartDay = calendar.getActualMaximum(Calendar.DAY_OF_MONTH);

		calendar.add(Calendar.MONTH, 1);
		Log.e("이번달 시작일", calendar.get(Calendar.DAY_OF_MONTH) + "");

		if (dayOfMonth == SUNDAY) {
			dayOfMonth += 7;
		}

		lastMonthStartDay -= (dayOfMonth - 1) - 1;

		mTvCalendarTitle.setText(mThisMonthCalendar.get(Calendar.YEAR) + "년 "
				+ (mThisMonthCalendar.get(Calendar.MONTH) + 1) + "월");

		DayInfo day;

		Log.e("DayOfMOnth", dayOfMonth + "");

		for (int i = 0; i < dayOfMonth - 1; i++) {
			int date = lastMonthStartDay + i;
			day = new DayInfo();
			day.setDay(Integer.toString(date));
			day.setInMonth(false);

			mDayList.add(day);
		}
		for (int i = 1; i <= thisMonthLastDay; i++) {
			day = new DayInfo();
			day.setDay(Integer.toString(i));
			day.setInMonth(true);

			mDayList.add(day);
		}
		for (int i = 1; i < 42 - (thisMonthLastDay + dayOfMonth - 1) + 1; i++) {
			day = new DayInfo();
			day.setDay(Integer.toString(i));
			day.setInMonth(false);
			mDayList.add(day);
		}

		initCalendarAdapter();
	}

	private Calendar getLastMonth(Calendar calendar) {
		calendar.set(calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH),
				1);
		calendar.add(Calendar.MONTH, -1);
		mTvCalendarTitle.setText(mThisMonthCalendar.get(Calendar.YEAR) + "년 "
				+ (mThisMonthCalendar.get(Calendar.MONTH) + 1) + "월");
		return calendar;
	}

	private Calendar getNextMonth(Calendar calendar) {
		calendar.set(calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH),
				1);
		calendar.add(Calendar.MONTH, +1);
		mTvCalendarTitle.setText(mThisMonthCalendar.get(Calendar.YEAR) + "년 "
				+ (mThisMonthCalendar.get(Calendar.MONTH) + 1) + "월");
		return calendar;
	}

	public void onClick(View v) {
		switch (v.getId()) {
		case R.id.b_last:
			mThisMonthCalendar = getLastMonth(mThisMonthCalendar);
			getCalendar(mThisMonthCalendar);
			break;
		case R.id.b_next:
			mThisMonthCalendar = getNextMonth(mThisMonthCalendar);
			getCalendar(mThisMonthCalendar);
			break;
		}
	}

	private void initCalendarAdapter() {
		mCalendarAdapter = new CalendarAdapter(this, R.layout.day, mDayList);
		mGvCalendar.setAdapter(mCalendarAdapter);
	}

	public void onItemClick(AdapterView<?> parent, View v, int position,
			long arg3) {
		DayInfo day = mDayList.get(position);
		String j = day.getDay();

		Toast.makeText(
				this,
				mThisMonthCalendar.get(Calendar.YEAR) + "년"
						+ (mThisMonthCalendar.get(Calendar.MONTH) + 1) + "월"
						+ j + "일" + position, Toast.LENGTH_LONG).show();
		pos = position;
		d = day.getDay();
		y = mThisMonthCalendar.get(Calendar.YEAR);
		m = mThisMonthCalendar.get(Calendar.MONTH);

	}
/*onOptionsItemSelected메소드는 onCreateOptionMenu를 통해서 만든 메뉴를 클릭했을때 실행되는 메소드입니다.이 메소드를 만들지 않으면 메뉴를 클릭하여도 아무런 반응이 뜨질 않습니다.*/
	public boolean onOptionsItemSelected(MenuItem item) {
		switch (item.getItemId()) {
		case 1:/*case1은 일이라는 메뉴를 클릭한 결과로 List라는 클래스로 정보를 가지고 intent를 합니다.*/
			Intent intent = new Intent(this, List.class);
			intent.putExtra("pos", pos);
			intent.putExtra("d", d);
			intent.putExtra("y", y);
			intent.putExtra("m", m);
			startActivity(intent);
			break;
		case 2:/*case2는 새로만들기라는 메뉴를 클릭한 결과로 Make라는 클래스로 정보를 가지고 intent를 합니다.*/
			Intent intent1 = new Intent(this, Make.class);
			intent1.putExtra("pos", pos);
			intent1.putExtra("d", d);
			intent1.putExtra("y", y);
			intent1.putExtra("m", m);
			startActivity(intent1);
			break;
		}
		return true;
	}


/*onCreateOptionMenu 메소드는 클래스가 실행될때 메뉴를 생기게하는 메소드입니다.
클래스를 생성하면 기본적으로 생기는 디폴드값인 메소드입니다.
제 앱에서는 2개의 메뉴를 사용하는데 기본적으로 한 화면에 최대 6가지의 메뉴화면을
보일수 있고 그 메뉴마다 또 다른 메뉴를 내포하여 2차원 배열처럼 메뉴를 만들수 있습니다. 
메뉴의 내용은 onOptionsItemSelected라는 메소드를 통해서 실행시킬수 있습니다.*/
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.main, menu);

		menu.add(0, 1, 2, "일");
		menu.add(0, 2, 2, "새로만들기");

		return true;
	}

}


}}}

*2.그리드뷰 클래스*

*3.리스트뷰 클래스*

*4.Make 클래스*

*5.전역 객체 클래스 Schedule*

=레이아웃 소개=

https://comp166-koreauniv.googlecode.com/files/%E3%84%B4%E3%84%B4.png