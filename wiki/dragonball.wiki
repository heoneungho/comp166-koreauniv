= Introduction =

친구들과 어렸을때 하던 드래곤볼 게임을 컴퓨터 또는 친구와 대전할수 있도록 만들어보려 합니다.

= Details =

에너지모으기, 방어하기, 공격하기, 순간이동, 원기옥등 다양한 기술을 사용하여 컴퓨터나 사용자끼리 대전할수 있도록 설계해보려 합니다.

= Requirement =

컴퓨터와 대전할경우 대전자수를 지정합니다.

기록을 남기기 위하여 플레이어의 아이디를 저장합니다.

기모으기, 방어하기, 공격하기, 필살기등 다양한 기술을 사용합니다.

-기모으기 : 공격을 하기위한 필요조건 입니다. 기모은 양에 따라 다양한 공격을 할수 있습니다.

-방어하기 : 공격을 방어하는 기술입니다. 원기옥을 제외한 모든 공격기술을 방어할수 있습니다.

-보통공격 : 기모으기 1회가 필요합니다. 상대가 기모으는 순간에 보통 공격을 할경우 승리하게 됩니다.

-강한공격 : 기모으기 2회가 필요합니다. 상대가 기모으기를 사용하거나 보통공격을 하는 순간에 강한공격을 할 경우 승리하게 됩니다.

-원기옥 : 기모으기 5회가 필요합니다. 상대가 순간이동을 제외한 어떠한 기술을 사용하더라도 승리하게 됩니다.

-순간이동 : 기모으기 1회가 필요합니다. 상대가 어떤 기술을 사용하더라도 살아남을수 있습니다.

= 구상 =

시작화면에는

게임 시작하기 : 사용자가 지정한 설정에 맞춰 게임을 시작합니다.

환경 설정 : 아이디 지정하기. 컴퓨터와 대전하기, 대전자수 정하기, 친구들과 대전하기

대전기록 : 사람들이 남긴 기록을 아이디마다 따로 저장합니다.

종료하기 : 프로그램을 종료합니다.


지금까지 만든거 11/25

CPU class

{{{


public class CPU extends Player{

	boolean cpuEnergy;
	
	public CPU() {
		cpuEnergy=false;
	}
	
	public void setEnergy (boolean energy) {cpuEnergy=energy;}
	public boolean getEnergy () {return cpuEnergy;}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

	public boolean getState(int i) {
		// TODO Auto-generated method stub
		return false;
	}

}

}}}

Player class

{{{


public class Player {


	int charge;
	int choice;
	int state;
	
	
	public Player() {
		
		charge = 0;
		choice = -1;
		state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
		
	}
	
	public void setCharge (int newCharge) {charge=newCharge;}
	public int getCharge () {return charge;}
	public void setChoice (int newChoice) {choice=newChoice;}
	public int getChoice () {return choice;}
	
	public void setState (int newState) {state = newState;}
	public int getState () {return state;}
	public static void main(String[] args) {
		// TODO Auto-generated method stub

	}

}

}}}

mydragonball Class

{{{

//메인메소드와 gui

import javax.swing.*;
import java.awt.EventQueue;
import javax.swing.JFrame;
import java.awt.BorderLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JLabel;
import java.awt.GridLayout;
import javax.swing.JButton;
import javax.swing.ImageIcon;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import java.awt.FlowLayout;
import javax.swing.SwingConstants;
import java.awt.Font;
import java.awt.Color;


public class mydragonball {
	

	private Player me;
	private CPU cpu;


	int end = -1;

	
	
	public mydragonball() {
		initPlayer();
		initialize();
	}
	
	public void initPlayer ()
	{
		me = new Player();
		cpu = new CPU();
	}
	
	
	
	private JFrame frame;

	/**
	 * Launch the application.
	 */
	public static void main(String[] args) {
		EventQueue.invokeLater(new Runnable() {
			public void run() {
				try {
					mydragonball window = new mydragonball();
					window.frame.setVisible(true);
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
		});
	}


	/**
	 * Initialize the contents of the frame.
	 */
	private void initialize() {
		

		frame = new JFrame();
		frame.setResizable(false);

		frame.setBounds(100, 100, 600, 350);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(new BorderLayout(0, 0));
		
		JPanel panel = new JPanel();
		frame.getContentPane().add(panel, BorderLayout.NORTH);
		
		JLabel lblSelectPosition = new JLabel("Select Position");
		panel.add(lblSelectPosition);
		
		JPanel panel_1 = new JPanel();
		frame.getContentPane().add(panel_1, BorderLayout.WEST);
		panel_1.setLayout(new GridLayout(2, 1));
		
		JLabel lblNewLabel = new JLabel("");
		lblNewLabel.setIcon(new ImageIcon("me.jpg"));
		panel_1.add(lblNewLabel);
		
		final JLabel lblNewLabel_1 = new JLabel("");
		panel_1.add(lblNewLabel_1);
		
		JPanel panel_2 = new JPanel();	
		frame.getContentPane().add(panel_2, BorderLayout.EAST);
		panel_2.setLayout(new GridLayout(2,1));
		
		JLabel lblNewLabel_2 = new JLabel("");
		lblNewLabel_2.setIcon(new ImageIcon("enemy.jpg"));
		panel_2.add(lblNewLabel_2);
		
		final JLabel lblNewLabel_3 = new JLabel("");
		panel_2.add(lblNewLabel_3);
		
		JPanel panel_3 = new JPanel();
		frame.getContentPane().add(panel_3, BorderLayout.SOUTH);
		panel_3.setLayout(new GridLayout(1,5));
		
		JPanel panel_4 = new JPanel();
		frame.getContentPane().add(panel_4, BorderLayout.CENTER);
		panel_4.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
		
		final JLabel lblNewLabel_4 = new JLabel("");
		lblNewLabel_4.setForeground(Color.RED);
		lblNewLabel_4.setFont(new Font("Viner Hand ITC", Font.PLAIN, 30));
		lblNewLabel_4.setHorizontalAlignment(SwingConstants.CENTER);
		panel_4.add(lblNewLabel_4);
		
		JMenuBar menuBar = new JMenuBar();
		frame.setJMenuBar(menuBar);
		
		JMenu mnFile = new JMenu("File");
		menuBar.add(mnFile);
		
		JMenuItem mntmNew = new JMenuItem("New");
		mntmNew.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				initPlayer();	

				end = -1;
				lblNewLabel_4.setText("");	
				lblNewLabel_1.setText("");	
				lblNewLabel_3.setText("");	
			}
		});
		mnFile.add(mntmNew);
		
		JMenuItem mntmExit = new JMenuItem("Exit");
		mntmExit.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				System.exit(0);
			}
		});
		mnFile.add(mntmExit);
		
		JMenu mnVersion = new JMenu("Version");
		menuBar.add(mnVersion);
		
		JMenuItem mntmInformation = new JMenuItem("Information");
		mntmInformation.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				JOptionPane.showMessageDialog(frame, "2009190715 임세현이 만든 trash");
			}
		});
		mnVersion.add(mntmInformation);
		
		
		
		JButton btnAttack = new JButton("charge");
		btnAttack.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {	
			

			//컴퓨터의 행동	
			if(me.getCharge()<1&&cpu.getCharge()==0) {  
					//cpu.charge++;
					cpu.setCharge(cpu.getCharge()+1);
					lblNewLabel_3.setText("기를 모읍니다. 현재 기모은양: " + cpu.getCharge());
					////System.out.println("기를 모읍니다. 현재 기모은양: " + cpu.getCharge());
					//cpu.state=0;
					cpu.setState(0);
				}
				else {
				
				while(!cpu.getEnergy())
				{
					//cpu.choice =  (int)(Math.random()*4);
					cpu.setChoice((int)(Math.random()*4));
					
					if(cpu.getChoice()==1&&cpu.getCharge()<1){}
					else if(cpu.getChoice()==3&&cpu.getCharge()<4){}
					else if(cpu.getChoice()==4&&cpu.getCharge()<2){}
					else
					{
						cpu.setEnergy(true);
					}
				}
				cpu.setEnergy(false);
				
				switch (cpu.getCharge()) {
				case 0:
					cpu.charge++;
					lblNewLabel_3.setText("기를 모읍니다. 현재 기모은양: " + cpu.getCharge());
					//System.out.println("기를 모읍니다. 현재 기모은양: " + cpu.getCharge());	
					cpu.state=0;
					break;
					
				case 1:
					cpu.charge--;
					lblNewLabel_3.setText("공격합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("공격합니다. 현재 기모은양: " + cpu.charge);
					cpu.setState(1);
					break;
					
				case 2:
					lblNewLabel_3.setText("방어합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("방어합니다. 현재 기모은양: " + cpu.charge);
					cpu.setState(2);
					break;
					
				case 3:
					cpu.charge=cpu.charge-4;
					lblNewLabel_3.setText("원기옥을 사용합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("원기옥을 사용합니다. 현재 기모은양: " + cpu.charge);
					cpu.setState(3);
					break;
					
				case 4:
					cpu.charge=cpu.charge-2;
					lblNewLabel_3.setText("텔레포트를 사용합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("텔레포트를 사용합니다. 현재 기모은양: " + cpu.charge);
					cpu.setState(4);
					break;
					

				default:
					break;
				}
			}
				
		
				
				//플레이어의 행동
				me.charge++;
				lblNewLabel_1.setText("기를 모읍니다. 현재 기모은양: " +me.getCharge());
				//System.out.println("기를 모읍니다. 현재 기모은양: " +me.getCharge());
				me.setState(0);
	
				
				
				
				
				

				//컴퓨터와 플레이어의 상태비교
						if(me.state==0 && cpu.state==1)
						{
							lblNewLabel_4.setText("lose");
							end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
							if (end==0) {
								cpu.charge = 0;
								me.charge = 0;
								cpu.choice = -1;
								cpu.setEnergy(false); 
								me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
								cpu.state = -1;
								end = -1;
								lblNewLabel_4.setText("");	
								lblNewLabel_1.setText("");	
								lblNewLabel_3.setText("");													
							}
							else {
								System.exit(0);
							}
							
						}
						else if(me.state==1 && cpu.state==0)
						{
							lblNewLabel_4.setText("win");
							end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
							if (end==0) {
								cpu.charge = 0;
								me.charge = 0;
								cpu.choice = -1;
								cpu.setEnergy(false); 
								me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
								cpu.state = -1;
								end = -1;
								lblNewLabel_4.setText("");	
								lblNewLabel_1.setText("");	
								lblNewLabel_3.setText("");													
							}
							else {
								System.exit(0);
							}
							//break;
						}
						else if(me.state==3 && cpu.state!=4)
						{
							lblNewLabel_4.setText("win");
							end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
							if (end==0) {
								cpu.charge = 0;
								me.charge =  0;
								cpu.choice =  -1;
								cpu.setEnergy(false); 
								me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
								cpu.state = -1;
								end = -1;
								lblNewLabel_4.setText("");	
								lblNewLabel_1.setText("");	
								lblNewLabel_3.setText("");													
							}
							else {
								System.exit(0);
							}
							//break;
						}
						else if(me.state!=4 && cpu.state==3)
						{
							lblNewLabel_4.setText("lose");	
							end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
							if (end==0) {
								cpu.charge = 0;
								me.charge =  0;
								cpu.choice =  -1;
								cpu.setEnergy(false); 
								me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
								cpu.state = -1;
								end = -1;
								lblNewLabel_4.setText("");	
								lblNewLabel_1.setText("");	
								lblNewLabel_3.setText("");													
							}
							else {
								System.exit(0);
							}
							//break;
						}

			
			
				
			
		}
		
	
	});
		panel_3.add(btnAttack);
		
		JButton btnDefense = new JButton("attack");
		btnDefense.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {
				
				
				if(me.getCharge()<1) {
					lblNewLabel_4.setText("error");
				}
				else {

				
				
				if(me.getCharge()<1&&cpu.charge==0) {  
					cpu.charge++;
					lblNewLabel_3.setText("기를 모읍니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("기를 모읍니다. 현재 기모은양: " + cpu.charge);
					cpu.state=0;
				}
				else {
				
				while(!cpu.getEnergy())
				{
					cpu.choice =  (int)(Math.random()*4);
					if(cpu.getChoice()==1&&cpu.charge<1){}
					else if(cpu.getChoice()==3&&cpu.charge<4){}
					else if(cpu.getChoice()==4&&cpu.charge<2){}
					else
					{
						cpu.setEnergy(true);
					}
				}
				cpu.setEnergy(false);
				
				switch (cpu.getChoice()) {
				case 0:
					cpu.charge++;
					lblNewLabel_3.setText("기를 모읍니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("기를 모읍니다. 현재 기모은양: " + cpu.charge);	
					cpu.state=0;
					break;
					
				case 1:
					cpu.charge--;
					lblNewLabel_3.setText("공격합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("공격합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=1;
					break;
					
				case 2:
					lblNewLabel_3.setText("방어합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("방어합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=2;
					break;
					
				case 3:
					cpu.charge=cpu.charge-4;
					lblNewLabel_3.setText("원기옥을 사용합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("원기옥을 사용합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=3;
					break;
					
				case 4:
					cpu.charge=cpu.charge-2;
					lblNewLabel_3.setText("텔레포트를 사용합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("텔레포트를 사용합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=4;
					break;
					

				default:
					break;
				}
			}
				
				
				
				
				me.setCharge(me.getCharge()-1);
				lblNewLabel_1.setText("공격합니다. 현재 기모은양: " +me.getCharge());
				//System.out.println("공격합니다. 현재 기모은양: " +me.getCharge());
				me.state=1;
	
				
				
				
				
				

				

				if(me.state==0 && cpu.state==1)
				{
					lblNewLabel_4.setText("lose");
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					
				}
				else if(me.state==1 && cpu.state==0)
				{
					lblNewLabel_4.setText("win");
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					//break;
				}
				else if(me.state==3 && cpu.state!=4)
				{
					lblNewLabel_4.setText("win");
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					//break;
				}
				else if(me.state!=4 && cpu.state==3)
				{
					lblNewLabel_4.setText("lose");	
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					//break;
				}
						
						
			}
		}
			
		});
		panel_3.add(btnDefense);
		
		JButton btnCharge = new JButton("defense");
		btnCharge.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				
				
				if(me.getCharge()<1&&cpu.charge==0) {  
					cpu.charge++;
					lblNewLabel_3.setText("기를 모읍니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("기를 모읍니다. 현재 기모은양: " + cpu.charge);
					cpu.state=0;
				}
				else {
				
				while(!cpu.getEnergy())
				{
					cpu.choice =  (int)(Math.random()*4);
					if(cpu.getChoice()==1&&cpu.charge<1){}
					else if(cpu.getChoice()==3&&cpu.charge<4){}
					else if(cpu.getChoice()==4&&cpu.charge<2){}
					else
					{
						cpu.setEnergy(true);
					}
				}
				cpu.setEnergy(false);
				
				switch (cpu.getChoice()) {
				case 0:
					cpu.charge++;
					lblNewLabel_3.setText("기를 모읍니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("기를 모읍니다. 현재 기모은양: " + cpu.charge);	
					cpu.state=0;
					break;
					
				case 1:
					cpu.charge--;
					lblNewLabel_3.setText("공격합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("공격합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=1;
					break;
					
				case 2:
					lblNewLabel_3.setText("방어합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("방어합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=2;
					break;
					
				case 3:
					cpu.charge=cpu.charge-4;
					lblNewLabel_3.setText("원기옥을 사용합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("원기옥을 사용합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=3;
					break;
					
				case 4:
					cpu.charge=cpu.charge-2;
					lblNewLabel_3.setText("텔레포트를 사용합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("텔레포트를 사용합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=4;
					break;
					

				default:
					break;
				}
			}
				
				
				
				
				lblNewLabel_1.setText("방어합니다. 현재 기모은양: " +me.getCharge());
				//System.out.println("방어합니다. 현재 기모은양: " +me.getCharge());
				me.state=2;
	
				
				
				
				
				

				

				if(me.state==0 && cpu.state==1)
				{
					lblNewLabel_4.setText("lose");
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					
				}
				else if(me.state==1 && cpu.state==0)
				{
					lblNewLabel_4.setText("win");
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					//break;
				}
				else if(me.state==3 && cpu.state!=4)
				{
					lblNewLabel_4.setText("win");
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					//break;
				}
				else if(me.state!=4 && cpu.state==3)
				{
					lblNewLabel_4.setText("lose");	
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					//break;
				}
						
						
			}
		});
		panel_3.add(btnCharge);
		
		JButton btnPowerAttack = new JButton("power attack");
		btnPowerAttack.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				if(me.getCharge()<4) {
					lblNewLabel_4.setText("error");
				}
				else {
				
				
				
				if(me.getCharge()<1&&cpu.charge==0) {  
					cpu.charge++;
					lblNewLabel_3.setText("기를 모읍니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("기를 모읍니다. 현재 기모은양: " + cpu.charge);
					cpu.state=0;
				}
				else {
				
				while(!cpu.getEnergy())
				{
					cpu.choice =  (int)(Math.random()*4);
					if(cpu.getChoice()==1&&cpu.charge<1){}
					else if(cpu.getChoice()==3&&cpu.charge<4){}
					else if(cpu.getChoice()==4&&cpu.charge<2){}
					else
					{
						cpu.setEnergy(true);
					}
				}
				cpu.setEnergy(false);
				
				switch (cpu.getChoice()) {
				case 0:
					cpu.charge++;
					lblNewLabel_3.setText("기를 모읍니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("기를 모읍니다. 현재 기모은양: " + cpu.charge);	
					cpu.state=0;
					break;
					
				case 1:
					cpu.charge--;
					lblNewLabel_3.setText("공격합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("공격합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=1;
					break;
					
				case 2:
					lblNewLabel_3.setText("방어합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("방어합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=2;
					break;
					
				case 3:
					cpu.charge=cpu.charge-4;
					lblNewLabel_3.setText("원기옥을 사용합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("원기옥을 사용합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=3;
					break;
					
				case 4:
					cpu.charge=cpu.charge-2;
					lblNewLabel_3.setText("텔레포트를 사용합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("텔레포트를 사용합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=4;
					break;
					

				default:
					break;
				}
			}
				
				
				
				
				me.setCharge(me.getCharge()-4);
				lblNewLabel_1.setText("원기옥을 사용합니다. 현재 기모은양: " +me.getCharge());
				//System.out.println("원기옥을 사용합니다. 현재 기모은양: " +me.getCharge());
				me.state=3;
	
				
				
				
				
				

				
				if(me.state==0 && cpu.state==1)
				{
					lblNewLabel_4.setText("lose");
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					
				}
				else if(me.state==1 && cpu.state==0)
				{
					lblNewLabel_4.setText("win");
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					//break;
				}
				else if(me.state==3 && cpu.state!=4)
				{
					lblNewLabel_4.setText("win");
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					//break;
				}
				else if(me.state!=4 && cpu.state==3)
				{
					lblNewLabel_4.setText("lose");	
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					//break;
				}
						
			}
		}
			
		});
		panel_3.add(btnPowerAttack);
		
		JButton btnTeleport = new JButton("teleport");
		btnTeleport.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				
				if(me.getCharge()<2) {
					lblNewLabel_4.setText("error");
				}
				else {
				
				
				
				if(me.getCharge()<1&&cpu.charge==0) {  
					cpu.charge++;
					lblNewLabel_3.setText("기를 모읍니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("기를 모읍니다. 현재 기모은양: " + cpu.charge);
					cpu.state=0;
				}
				else {
				
				while(!cpu.getEnergy())
				{
					cpu.choice =  (int)(Math.random()*4);
					if(cpu.getChoice()==1&&cpu.charge<1){}
					else if(cpu.getChoice()==3&&cpu.charge<4){}
					else if(cpu.getChoice()==4&&cpu.charge<2){}
					else
					{
						cpu.setEnergy(true);
					}
				}
				cpu.setEnergy(false);
				
				switch (cpu.getChoice()) {
				case 0:
					cpu.charge++;
					lblNewLabel_3.setText("기를 모읍니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("기를 모읍니다. 현재 기모은양: " + cpu.charge);	
					cpu.state=0;
					break;
					
				case 1:
					cpu.charge--;
					lblNewLabel_3.setText("공격합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("공격합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=1;
					break;
					
				case 2:
					lblNewLabel_3.setText("방어합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("방어합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=2;
					break;
					
				case 3:
					cpu.charge=cpu.charge-4;
					lblNewLabel_3.setText("원기옥을 사용합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("원기옥을 사용합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=3;
					break;
					
				case 4:
					cpu.charge=cpu.charge-2;
					lblNewLabel_3.setText("텔레포트를 사용합니다. 현재 기모은양: " + cpu.charge);
					//System.out.println("텔레포트를 사용합니다. 현재 기모은양: " + cpu.charge);
					cpu.state=4;
					break;
					

				default:
					break;
				}
			}
				
				
				
				
				me.setCharge(me.getCharge()-2);
				lblNewLabel_1.setText("텔레포트를 사용합니다. 현재 기모은양: " +me.getCharge());
				//System.out.println("텔레포트를 사용합니다. 현재 기모은양: " +me.getCharge());
				me.state=4;
	
				
				
				
				
				

				

				if(me.state==0 && cpu.state==1)
				{
					lblNewLabel_4.setText("lose");
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					
				}
				else if(me.state==1 && cpu.state==0)
				{
					lblNewLabel_4.setText("win");
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					//break;
				}
				else if(me.state==3 && cpu.state!=4)
				{
					lblNewLabel_4.setText("win");
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					//break;
				}
				else if(me.state!=4 && cpu.state==3)
				{
					lblNewLabel_4.setText("lose");	
					end = JOptionPane.showConfirmDialog(frame, "다시 시작하시겠습니까", "시작",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
					if (end==0) {
						cpu.charge = 0;
						me.charge =  0;
						cpu.choice =  -1;
						cpu.setEnergy(false); 
						me.state = -1;//0=charge,1=attack,2=defense,3=power attack, 4=teleport
						cpu.state = -1;
						end = -1;
						lblNewLabel_4.setText("");	
						lblNewLabel_1.setText("");	
						lblNewLabel_3.setText("");													
					}
					else {
						System.exit(0);
					}
					//break;
				}
						
			}
				
		}
			
		});
		panel_3.add(btnTeleport);
		

		
	
	}

}
}}}