= Introduction =

친구들과 어렸을때 하던 드래곤볼 게임을 컴퓨터 또는 친구와 대전할수 있도록 만들어보려 합니다.

= Details =

에너지모으기, 방어하기, 공격하기, 순간이동, 원기옥등 다양한 기술을 사용하여 컴퓨터나 사용자끼리 대전할수 있도록 설계해보려 합니다.

= Requirement =

컴퓨터와 대전할경우 대전자수를 지정합니다.

기록을 남기기 위하여 플레이어의 아이디를 저장합니다.

기모으기, 방어하기, 공격하기, 필살기등 다양한 기술을 사용합니다.

-기모으기 : 공격을 하기위한 필요조건 입니다. 기모은 양에 따라 다양한 공격을 할수 있습니다.

-방어하기 : 공격을 방어하는 기술입니다. 원기옥을 제외한 모든 공격기술을 방어할수 있습니다.

-보통공격 : 기모으기 1회가 필요합니다. 상대가 기모으는 순간에 보통 공격을 할경우 승리하게 됩니다.

-강한공격 : 기모으기 2회가 필요합니다. 상대가 기모으기를 사용하거나 보통공격을 하는 순간에 강한공격을 할 경우 승리하게 됩니다.

-원기옥 : 기모으기 5회가 필요합니다. 상대가 순간이동을 제외한 어떠한 기술을 사용하더라도 승리하게 됩니다.

-순간이동 : 기모으기 1회가 필요합니다. 상대가 어떤 기술을 사용하더라도 살아남을수 있습니다.

= 구상 =

시작화면에는

게임 시작하기 : 사용자가 지정한 설정에 맞춰 게임을 시작합니다.

환경 설정 : 아이디 지정하기. 컴퓨터와 대전하기, 대전자수 정하기, 친구들과 대전하기

대전기록 : 사람들이 남긴 기록을 아이디마다 따로 저장합니다.

종료하기 : 프로그램을 종료합니다.

= 클래스 =

1. 메인클래스
{{{

public class dragonball{
	public static void main(String [] args ) {
		GameMain main = new GameMain(); //게임메인메뉴 생성
	}
}

}}}

2. 메인 화면 클래스
{{{
class GameMain
{
	start(); //게임을 시작합니다.
	setting(); //환경설정을 합니다.
	scoresettiong(); // 점수를 설정합니다.
	exit(); //게임을 종료합니다.
}
}}}

3. 게임 화면 클래스
{{{
class Palying {
	attack(); //공격합니다.
	defence(); //방어합니다.
	charging(); //기를 모읍니다.
}

}}}
4. 컴퓨터 클래스
{{{
class Cpu {
	CPUAction(); // 컴퓨터 행동을 지정해줍니다.
}
}}}
5. 스코어 클래스
{{{
class Score {
	ScoreSave(); // 점수를 저장합니다.
	ScoreArray(); // 점수를 높은순으로 나열합니다.
}
}}}
6. 아이디 설정 클래스
{{{
class NickName{
	NewNick(); // 닉네임을 생성합니다.
	NickSave(); // 닉네임을 저장합니다.
}
}}}

7. 공격클래스 (VAttack)
{{{
class VAttack {
	NA(); //보통공격을 합니다.
	SA(); //강력한공격을 합니다.
	SSA(); // 원기옥을 사용합니다.
}
}}}


지금 대충 틀을 잡아보는...중?

{{{

import java.util.Scanner; 
class dragon { 
	public static void main(String[] args) { 
	int a=0;
	boolean x = true;
	String draw = "아무일도 일어나지 않았다."; 
	String win = "당신이 이겼습니다."; 
	String lose = "컴퓨터가 이겼습니다.";
	int charge = 0; //기모은횟수
		
	String[] my = {"기모으기","공격","방어"};              //내가 가위바위보
	Scanner me = new Scanner(System.in);
	   
	while(true)
	{    	 
		
	while(x)
	{
	System.out.println("기모으기 = 0, 공격 = 1, 방어 = 2");
	a = me.nextInt();
	if (charge==0 && a==1)
		System.out.println("공격할 에너지가 부족합니다.");
	else
		x = false;
	}
		
	if (a==0)
		charge++; //기를모음
	
	if (a==1)
		charge--;//공격하면 기를 소모
	
		
    if(a>=0||a<3)
    { 
          System.out.println("당신은 " + my[a] + "을 하셨습니다.");
    }
    else
    { 
          System.out.println("0,1,2중 하나만 선택하시길 바랍니다."); 
    } 
    //컴퓨터가 선택
    int co=(int)(Math.random()*3); // *3에 +1을 해야만 1~3이 나옵니다. 
    System.out.println("컴퓨터는 " + my[co] + "을 했다.");        
	  
       if (a == 2 || co ==2 || a==co)
    	   System.out.println(draw);
       else if (a==1 && co==0)
       {
    	   System.out.println(win);
    	   break;
       }
   	   else if(a==0 && co==1)
   	   {
    	   System.out.println(lose);
    	   break;
       
       }
       x = true;
 	}
	}
}


}}}