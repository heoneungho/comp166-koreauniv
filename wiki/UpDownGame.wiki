#summary UpDownGame
#labels 2012190726김경민

= Introduction =

 많이 알려져있고 심심풀이로 할 수 있는 업다운 게임입니다.<br>
 너무 평범함을 피하기 위해 찬스라는 개념을 도입해 신선함을 주고자 만드는 게임입니다.



= Details =

 * 스테이지를 5개로 나눕니다.
 * 스테이지 1에서는 1~10, 2에서는 1~50, 3에서는 1~100, 4에서는 1~500, 5에서는 1~1000범위의 숫자 하나를 프로그램이 랜덤으로 정합니다.
 * 플레이어가 한 숫자를 입력하면 입력한 숫자보다 처음 정한 숫자가 크면 Up, 작으면 Down을 출력합니다.
 * 플레이어가 숫자를 맞출 때까지 혹은 맞출 수 있는 기회를 다 사용할 때까지 계속됩니다.
 * 맞춘 경우, 플레이어가 몇 번째에 맞췄는지를 출력합니다.
 * 맞추지 못하고 기회를 모두 소진한 경우, 게임오버가 뜨며 처음 정해진 숫자가 무엇인지 출력합니다.
 * 평범한 업다운 게임과 다르게 찬스 기회를 한 번 주고, 구현돼 있는 찬스들 중 랜덤으로 하나의 찬스의 힌트를 플레이어에게 제공합니다.



= Chances =

 찬스의 종류들<br>

 * 정해진 숫자가 짝수인지 알려줍니다.
 * 정해진 숫자가 3의 배수인지 알려줍니다.
 * 정해진 숫자가 현재 정해진 숫자의 범위의 최댓값(Max)와 최솟값(Min)의 중간값(Mid)에 비해 큰지 작은지를 알려줍니다.
 (Ex) 현재 알고 있는 범위가 50~100 이라면 정해진 숫자가 75 이하인지 이상인지 알려줍니다. 만약 정해진 숫자가 75라면 같다고 출력하며 게임을 종료합니다.
 * 숫자를 맞출 수 있는 기회를 1회 추가합니다.
 * 숫자를 맞출 수 있는 기회를 1회 감소시킵니다.
 * 꽝
 * 정답의 1의 자리를 알려줍니다.
 * 정답의 맨 윗자리 숫자를 알려줍니다.
 * 정답의 자릿수를 알려줍니다.

 * 이번 스테이지가 클리어됩니다.
 * 패배합니다.
  - 아래 두개 찬스는 영향도가 높은 만큼 다른 찬스들에 비해 확률을 1/2로 조정했습니다.


 
= Code =

{{{


package upanddown;

import java.util.Scanner;

public class MainUpDown extends UpDownGame {
        
        public static void main(String[] args) {
                
                
                Chances ch = new Chances();
                GameHelper helper = new GameHelper();
                Decide dec = new Decide();
                
                
                boolean alive = true;
                
                System.out.println("업다운 게임에 오신걸 환영합니다!");
                System.out.print("게임을 하시려면 1을, 도움말을 보시려면 2를 입력하세요 : ");
                
                int nu = 0;
                Scanner sc = new Scanner(System.in);
                try {
                	nu = sc.nextInt();
                } catch (java.util.InputMismatchException ex) {
                	err = true;
                }

                while(nu != 1 && nu != 2 && !err) {
                        System.out.println("잘못 입력 하셨습니다.");
                        System.out.print("게임을 하시려면 1을, 도움말을 보시려면 2를 입력하세요 : ");
                        try {
                            nu = sc.nextInt();
                        } catch (java.util.InputMismatchException ex) {
                        	err = true;
                        }

                }
          
                if(nu == 2) {
                  
                  System.out.println("");
                  System.out.println("          =도움말=");
                  System.out.println("-이 게임은 임의로 정해진 숫자를 맞추는 게임입니다.");//도움말 내용
                  System.out.println("-모두 5개의 스테이지로 이루어져 있으며, 각 스테이지마다 맞춰야 하는 숫자의 범위가 다릅니다.");
                  System.out.println("-찬스의 기회가 한 번 주어지며, 찬스는 0을 입력했을 때 여러 찬스들 중 임의로 한가지가 실행됩니다.");
                  System.out.println("-다섯 스테이지를 모두 클리어 할 경우 승리하며, 기회를 모두 사용하고 숫자를 맞추지 못하면 패배합니다.");
                  System.out.println("-이 게임은 생각 1%와 운 99%로 승패가 결정되기 때문에 못깨고 징징대셔도 소용 없습니다.");
                  System.out.println("");
                  System.out.print("--준비가 되셨으면 1을 입력하여 게임을 시작합니다: ");

                  while(nu != 1 && !err) {
                	  try{
                		  nu = sc.nextInt();
                	  } catch (java.util.InputMismatchException ex) {
                    	err = true;
                	  }
                  }
                }
                
                if(nu == 1) {
                	
                	System.out.println("");
                	System.out.println("");
                	System.out.println("");
                	System.out.println("게임을 시작합니다.");
                	System.out.println("");
                	System.out.println("");
                	
                	
                  
                	while (alive == true && !err) {
                		
                		System.out.println("== Stage " + stage + " ==");

                		
                		switch(stage) {
	                		
	                		case 1 : //스테이지 1
	                			
	                			max = 10;
	                			min = 1;
	                			life = 5;
	                			ans = (int) (Math.random() * 10) + 1;
	                			
                				dec.dec(ch, helper);
                				
                				break;
	                			
	                			
	                		case 2 :
	                			
	                			max = 50;
	                			min = 1;
	                			life = 6;
	                			ans = (int) (Math.random() * 50) + 1;
	                			
                				dec.dec(ch, helper);
	                			
	                			break;
	                			
	                			
	                		case 3 :
	                			
	                			max = 100;
	                			min = 1;
	                			life = 7;
	                			ans = (int) (Math.random() * 100) + 1;
	                			
                				dec.dec(ch, helper);
	                			
	                			break;
	                			
	                			
	                		case 4 :
	                			
	                			max = 500;
	                			min = 1;
	                			life = 8;
	                			ans = (int) (Math.random() * 500) + 1;
	                			
	                			dec.dec(ch, helper);
	                			
	                			break;
	                			
	                			
	                		case 5 :
	                			
	                			max = 1000;
	                			min = 1;
	                			life = 8;
	                			ans = (int) (Math.random() * 1000) + 1;
	                			
	                			dec.dec(ch, helper);
	                			
	                			break;
	
	                			
                		}
	                			
                             		
                		if(clear) {
                			System.out.println("== Stage " + stage + " 클리어!! ==");
                			System.out.println("-시도 횟수 : " + numofguesses + " -남은 기회 : " + life);
                			System.out.println("");
                			stage++;
                			numofguesses = 0;
                			clear = false;
                		} else if (win) {
                			System.out.println("== Stage " + stage + " 클리어!! ==");
                			System.out.println("-시도 횟수 : " + numofguesses + " -남은 기회 : " + life);
                			System.out.println("");
                			
                			System.out.println(" !! 모든 스테이지를 클리어 하셨습니다. !!");
                			System.out.println("!! 당신은 UpDown게임을 정벅하셨습니다. !!");
                			System.out.println("     !! You Win !!");
                			alive = false;
                			//승리로 끝남!
                		} else if(life == 0) { //패배시
                			alive = false;
                			System.out.println("- 정답은 " + ans + "입니다.");
                			System.out.println("- 패배하였습니다.");
                			System.out.println("- Game Over -");
                			System.out.println("");
                			System.out.print("-이어 하시려면 1을, 종료하시려면 아무 숫자나 입력하세요 :");
                			
                			int con = 0;
                			
                			try{
                				con = sc.nextInt();
                			} catch (java.util.InputMismatchException ex) {
                            	err = true;
                			}
                			
                			
                			if(con == 1 && !err) { //컨티뉴 기능
                				alive = true;
                				if(stage == 1) {
                					life = 5;
                				} else if(stage == 2) {
                					life = 6;
                				} else if(stage == 3) {
                					life = 7;
                				} else if(stage == 4) {
                					life = 8;
                				} else {
                					life = 8;
                				}
                				System.out.println("");
                				numofguesses = 0;
                			} else if(!err) {
                				System.out.println("");
                				System.out.println("=게임을 종료합니다.=");
                			}
                		} 
                		
                		if(err) {
                			break;
                		}
                                                
                	} //while문 끝
                	
                  
                } //if문 끝
                
                if(err) {
    				System.out.println("");
                  	System.out.println("숫자를 입력하라니까요 ㅡㅡ");
            		System.out.println("!! 에러로 게임을 종료합니다. !!");
            	}
                
        } //메인 메소드 끝

} //클래스 끝

}}}


{{{

package upanddown;

import java.util.Scanner;

public class GameHelper extends UpDownGame {
        
    public int getInput() {
    	
        int Input = 0;
        Scanner sc = new Scanner(System.in);
        try {
        	
            System.out.println("  =숫자를 입력하세요.=  ");
            System.out.println("-찬스를 사용하시려면 0을 입력하세요.-");
            Input = sc.nextInt();
        	
        } catch (java.util.InputMismatchException ex) {
        	err = true;
        }

        return Input;
        
    } //함수 끝
        
} //클래스 끝

}}}


{{{


package upanddown;

public class UpDownGame {
	
	public static int guess = 0;
	public static int ans = 0;
	public static int life = 0;
	public static int max = 0;
	public static int min = 0;
	public static int numofguesses = 0;
	public static boolean clear = false;
	public static boolean win = false;
	public static boolean chv = true;
	public static int stage = 1; //라운드는 1부터
	public static boolean err = false;
	

}


}}}


{{{

package upanddown;

public class Chances extends UpDownGame {
        
        int ranch = (int) (Math.random() * 20) + 1;
 
        public void pch() {
                
            switch(ranch) {
            
            case 1:
            case 11:
                    System.out.println("  --짝/홀 찬스--  ");
                    
                    if((ans % 2) == 0) {
                    	System.out.println("==답은 '짝수' 입니다.==");
                    } else {
                    	System.out.println("==답은 '홀수' 입니다.==");
                    }
                    break;

            
            case 2:
            case 12:
                    System.out.println("  --3의 배수 찬스--  ");
                    
                    if((ans % 3) == 0) {
                    	System.out.println("==답은 '3의 배수' 입니다.==");
                    } else {
                    	System.out.println("==답은 3의 배수가 아닙니다.==");
                    }
                    
                    break;
            
            
            case 3:
            case 13:
                    System.out.println("  --기회 추가--  ");
                    System.out.println("==기회가 '1회 추가' 되었습니다!==");
                    
                    life++;
                    
                    break;
                    
            case 4:
            case 14:
            		System.out.println("  --기회 감소--  ");
            		System.out.println("==기회가 '1회 감소' 되었습니다 호갱님^^==");
                    
                    life--;
                    
                    break;
                    
            case 5:
            case 15:
            		int mid = (int) (max + min) / 2;
            	
            		
            		System.out.println("  --반띵 찬스!!--  ");
                    
            		if (ans > mid) {
            		min = mid;
                    	System.out.println("==답은 " + min + " 보다 크고, " + max + " 보다 작습니다.==");
                    } else if(ans < mid) {
                    	max = mid;
                    	System.out.println("==답은 " + min + " 보다 크고, " + max + " 보다 작습니다.==");
                    } else {
                    	clear = true;
                    } 
                    
                    break;
                    
            case 6:
            case 16:
                    System.out.println("==  아쉽지만 꽝이네요.  ==");
                    break;
                    
            case 7:
            case 17:
            		int one = 0;
            	
            		if(ans < 10) {
            			one = (int) ans;
            		} else if(ans < 100) {
            			one = (int) ans % 10;
            		} else if(ans < 1000) {
            			one = (int) (ans % 100) % 10;
            		} else {
            			one = 0;
            		}
            		
            		System.out.println("  --일의 자리 찬스--  ");
            		System.out.println("==정답의 일의 자리는 '" + one + "'입니다.==");
            		
            		break;
            		
            case 8:
            case 18:
            		int fin = 0;
            		
            		if(ans < 10) {
            			fin = (int) ans;
            		} else if(ans < 100) {
            			fin = (int) ans / 10;
            		} else if(ans < 1000) {
            			fin = (int) ans / 100;
            		} else {
            			fin = 1;
            		}
            		
            		System.out.println("  --윗 자리 찬스--");
            		System.out.println("==정답의 가장 윗자리 숫자는 '" + fin + "' 입니다.==");
            		
            		break;
            		
            case 9:
            case 19:
            		System.out.println("  --몇 자리 찬스--  ");
            	
            		if(ans < 10) {
            			System.out.println("==정답은 '한 자리 수'입니다.==");
            		} else if(ans < 100) {
            			System.out.println("==정답은 '두 자리 수'입니다.==");
            		} else if(ans < 1000) {
            			System.out.println("==정답은 '세 자리 수'입니다.==");
            		} else {
            			System.out.println("==!!정답은 '네자리 수'입니다.=!!==");
            		}
            		
            		break;
            		
            case 10:
            		System.out.println("  --!!클리어 찬스!!--");
            		System.out.println("==이번 스테이지가 클리어 됩니다.==");
            		
            		clear = true;
            		
            		break;
            		
            case 20:
            		System.out.println("  --패배 찬스--  ");
            		System.out.println("==그냥 아무 이유없이 패배합니다.==");
            		
            		life = 0;
            		
            		break;

                    

            } //스위치문 끝
                
        } //함수 
        
} //클래스 끝

}}}


{{{

package upanddown;

public class Decide extends UpDownGame{
	
	public void dec(Chances ch, GameHelper helper) {
		
		while(life > 0 && !clear && !win) {
		
			do {
				
				System.out.println("-life: " + life);
				System.out.println("-" + min + "에서 " + max + " 사이의 숫자를 맞춰야 합니다.");
				System.out.println("");
			
				guess = helper.getInput();
				System.out.println("");	
			
				if(guess == 0 || guess == 9998/*치트키*/) {
					break;
				}
			
			} while(guess > max || guess < min);
			
			
			if(!err) {
				
				if(guess == ans) {
					if(stage == 5) {
						win = true;
					} else {
						clear = true;
					}
					life--;
				} else if(guess == 0 && chv) {
					//찬스 사용!!
					ch.pch();
					chv = false;
					System.out.println("");
					numofguesses--;
				} else if(guess == 0) {
					System.out.println("!! 찬스 기회를 모두 사용하여 사용 하실 수 없습니다. !!");
					numofguesses--;
				} else if(guess < ans) {
					System.out.println("== Up!! ==");
					min = guess;
					life--;
				} else if(guess == 9998) { //치트키
					System.out.println(ans);
					numofguesses--;
				} else{
					System.out.println("== Down!! ==");
					max = guess;
					life--;
				}
			
			} else if(err) {
				break;
			}
			
			guess = 0;
			numofguesses++;
		
		}

	}
	
}


}}}


일단 완성. 수정할 부분 있으면 차후 수정하겠습니다.

컨티뉴 부분 추가, 찬스 대폭추가

폭풍같은 가독성 상승을 위한 Decide 클래스 추가

버그 수정

-기말고사 답안지에 썼던 것처럼 상속 관계 이용해서 변수들의 가독성을 높였습니다.
+ 자잘한 것들 살짝 수정

-try catch 구문으로 숫자 입력받을 때 숫자 아닌거 들어오면 게임을 종료하도록 설정.

boolean == true, false라고 되어있던거 가독성 좋게 수정


= ScreenShots = 

1. 실행 초기화면
<img src = "http://comp166-koreauniv.googlecode.com/files/up1.png">

2. 도움말 이후 시작화면
<img src = "http://comp166-koreauniv.googlecode.com/files/up2.png">

3. 게임 진행 화면 & 한 스테이지 클리어 화면
<img src = "http://comp166-koreauniv.googlecode.com/files/up3.png">

4. 찬스 사용 화면
<img src = "http://comp166-koreauniv.googlecode.com/files/up4.png">

5. 찬스 사용 이후 또 사용하려는 화면
<img src = "http://comp166-koreauniv.googlecode.com/files/up5.png">

6. 범위 밖 숫자 입력시
<img src = "http://comp166-koreauniv.googlecode.com/files/up6.png">

7. 숫자 아닌거 입력시 종료
<img src = "http://comp166-koreauniv.googlecode.com/files/up7.png">

8. 패배 장면
<img src = "http://comp166-koreauniv.googlecode.com/files/up8.png">

9. 모든 스테이지 클리어 = win 장면
<img src = "http://comp166-koreauniv.googlecode.com/files/up9.png">


= Downloads = 

http://comp166-koreauniv.googlecode.com/files/UpDownGame.zip