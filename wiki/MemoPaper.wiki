#labels 2011190717김형준
#2011190717 김형준

= Introduction =
2011190717 김형준

고등학교때와 달리 대학교에선 필기할 내용이 상대적으로 많아졌다.
따라서 효율적으로 필기할 수 있는 메모장을 만들고자 한다.

= Background =

평소에 windows에 있는 메모장을 자주 사용하는데 그때마다  중요한 내용을 색을 구분했으면 좋겠다고 생각하였다.  뿐만아니라 메모장을 확대하는 형식이 아니라 좀더 세련된 느낌의 메모장을 만들고 싶어서 이러한 메모장을 생각해보았다.

= Details =
맨 처음 computer로 메모장을 만들기 위해서는 메뉴바가 필요하기 때문에 메뉴바 source code는 인터넷에서 참조하였다..

import javax.swing.*;
import java.awr.*;
import java.util.*;

class MenuPane extends JMenuBar { //메뉴바역할만
                 JMenu fileM, editM, viewM;
               JMenuItem newM, openM, saveM, cutM, copyM, pasteM;
               
               public MenuPane() {
                       setBackground(new Color(255,200,227));
                       setForeground(new Color(255,255,255));
                       //객체생성

                          fileM = new JMenu("파일");
                       editM = new JMenu("편집");
                       viewM = new JMent("보기");

                       newM = new JMenuItem("새로만들기");
                       openM = new JMenuItem("열기");
                       saveM = new JMenuItem("저장");
                       exitM = new JMenuItem("종료");

                       cutM = new JMenuItem("잘라내기");
                       copyM = new JMenuItem("복사");
                       pasteM = new JMenuItem("붙여넣기");


                       //메뉴바
                          this.add(fileM); this.add(editM); this.add(viewM);
                       //파일메뉴
                           fileM.add(newM); fileM.add(openM); fileM.add(saveM); fileM.add(exitM);
                       //편집메뉴
                          edit.add(cutM); editM.add(copy); editM.add(pasteM);
                       }
}




public class memoPaper {

     public static void main(String[] args) {
	
      loadMemo();
	int i;	
	string word;
	int[][] array;
	array = new int[1000][1000];
	
	

// 키보드로부터 문자열 입력받기
    System.out.println(sc.nextLine());
    // input method.

	
	nextPage(array);
	
	changeColor (word);
     saveMemo();
    }
  }
public class changeColor (string word) {
	
	word= newColor(255,0,0)//밑줄 친 내용을 빨간색으로 바꿔줌 //
}  
public void nextPage (int [][] array;) {
	
                 if(array[999][999] != ‘\0’)// array의 맨 마지막에 null문자가 아닐 때, 이 말은 array의 맨 마지막에 들어간 글자가 있다는 얘기고 그 말은 앞전에는 다 문자가 있다는 말이므로 한 페이지의 분량이 꽉 찾음 을 의미.//
		setnewPaper();
}	
public class setnewPaper() {
	int[][] array;
	array = new int[1000][1000];
}

public class saveMemo() {
	//내용을 저장한다.
}

public class loadMemo() {
	//저장한 내용을 불러온다. 
}
saveMemo class와 loadMemo class는 소스코드를 봐도 안 배운 내용이 있기 때문에 무슨 내용인지 모르고 생각하기 힘들다고 느껴서 교수님께 여쭤볼 예정입니다. 
	
class memoPaper 안에 main method를 넣고 그 method안에 input method를 넣어서 사용자의 입력을 받도록 합니다. 또한 windows의 메모장과 다르게 중요하다 생각되는 부분은 색을 다르게 변화시킬 수 있는 changeColor class가 main method안에 있다. 또한 한페이지의 분량이 가득차면 자동으로 페이지가 넘어가는 nextPage class을 가지고 있습니다.필기를 다하면 저장할 수 있는 saveMemo class와 불러올 수 있는 loadMemo class를 가지고 있습니다. 

= Using the Code =

구체적인 code는 class memoPaper안에 main method,  input method, changeColor method, nextPage method,  saveMemo method, 그리고  loadMemo method가 들어가있는것만 생각해보았다. 