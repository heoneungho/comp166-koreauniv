#summary 단순한 게임
#labels 2011190701김도형

= Introduction =

포켓몬에도 있는 이동모션조차 없는 단순한 게임.

= Background =

만들고 싶은 게임의 수준에 도달하기위한 준비단계

= Details =

class GameHeper, class Character와 class Enemy, class Battle,  class Story 등으로 구성

Character 클래스 안에 스테이터스를 변수로 입력

난이도 선택 가능(적 스테이터스의 변화)
캐릭터는 성장가능

save불가

메인페이지 및, 기본 시스템은 합작으로 구성.
그외 세부적인 요소 및 스토리는 각자 구성.

= Using the Code=

1. PlayerCharacter.class
{{{
import java.io.*;
public class PlayerCharacter implements Serializable	{        ///직렬화
	String name;
	int HP;
	int MP;
	int ATK;
	int EVA;
	String[] Spells;
	
	public PlayerCharacter(String n, int h, int m, int a, int e, String[] s)	{
		name = n;
		HP = h;
		MP = m;
		ATK = a;
		EVA = e;
		Spells = s;
	}
	public String getName()	{
		/// 캐릭터 이름을 받아온다.
	}
	public int getHP()	{
		/// 숫자형태의 수치를 받아온다.(이외의 것은 생략함)
	}
	public String getSpells()	{
		String spellList = "";
               /// 기술명을 받아온다
	}
}
}}}
2. PCData.java
{{{
public class PCData {
	public static void main(String [] args)	{
		PlayerCharacter one = new PlayerCharacter();   ///각 캐릭터의 성질 입력
		PlayerCharacter two = new PlayerCharacter();
		PlayerCharacter three = new PlayerCharacter();
		
		try	{
			ObjectOutputStream os = new ObjectOutputStream(new FileOutputStream("Game.ser"));
			os.writeObject(one);
			os.writeObject(two);
			os.writ력eObject(three);
			os.close();
		}	catch(IOException ex)	{
			ex.printStackTrace();
		}
		one = null;
		two = null;
		three = null;
		
		try	{
			ObjectInputStream is = new ObjectInputStream(new FileInputStream("Game.ser"));
			PlayerCharacter oneRestore = (PlayerCharacter) is.readObject();
			PlayerCharacter twoRestore = (PlayerCharacter) is.readObject();
			PlayerCharacter threeRestore = (PlayerCharacter) is.readObject();
		}	catch(Exception ex)	{
			ex.printStackTrace();
		}
	}
}
}}}

3. Enemy. java
4. EData.java
위의 두 클래스 파일과 같은 방식

5. Battle.java

= Work With =
이종화