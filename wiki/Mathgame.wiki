#summary 집중력 강화! Simple is the best!!
#labels 2013190716신아영


= Introduction =

http://comp166-koreauniv.googlecode.com/files/wikiimg.jpg

렉 걸리고 어려운 게임은 그만! Simple is the best에 입각하여 말그대로 심플한 게임을 소개합니다. 


= Details =

1. 누가누가 더 많이 맞추나~제한시간 설정 가능

2. 난이도 조절 가능~누구나 할 수 있는 게임

3. 문제가 넘어갈 때 마다 정답 여부 확인창을 띄어주어 긴장감 조성

4. 게임이 끝나면 채점 결과 확인 가능


= 자바 파일 =

== MainActivity.Java ==

package comp.fin.comedu16;

import android.app.Activity;
import android.content.Intent;
import android.media.MediaPlayer;
import android.os.Bundle;
import android.view.View;
import android.widget.SeekBar;
import android.widget.TextView;

import comp.fin.comedu16.constants.Constants;
import comp.fin.comedu16.listener.SeekBarListener;
//import android.os.StrictMode;

public class MainActivity extends Activity {
	
	MediaPlayer mp;
	
	private int gameTime;
	private SeekBarListener seekBarListener;
	private int gameLevel = 2;		// 1:Easy, 2:Normal, 3:Hard 로 일단 2의 값을 주었습니다.

	@Override
	protected void onCreate(Bundle savedInstanceState) 
	{
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
//		StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
//		StrictMode.setThreadPolicy(policy);
		mp = MediaPlayer.create(getApplicationContext(), R.raw.bgm);
		mp.setLooping(true);
		mp.start();
		
		SeekBar  timeSeekBar = (SeekBar)  findViewById(R.id.seekBar);			// 게임 시간을 설정하는 SeekBar
		TextView selectTime  = (TextView) findViewById(R.id.selectTime);		// 설정된 시간을 보여주는 TextView
		
		seekBarListener = new SeekBarListener(timeSeekBar, selectTime);			// SeekBar Listener 등록
		
	}
	
	public void mOnClick(View v) throws InterruptedException		// Start Button이 눌렸을 때
	{
		gameTime  = seekBarListener.getProgressVal();		// 게임 play 시간
		System.out.println("게임시작(Play 시간 : " + gameTime + ", Level : " + gameLevel + ")");		// 게임 start 버튼이 눌렸을 때 호출
		
		// Intent Class 이용해서 게임 화면 Activity로 이동
		Intent intent = new Intent(this, GameStartActivity.class);
		intent.putExtra(Constants.GAMETIME, gameTime);
		intent.putExtra(Constants.GAMELEVEL, gameLevel);
		startActivity(intent);
	}
	
	public void rOnSelect(View v)		// 난이도를 정하는 Radio Button
	{
		if(v.getId() == R.id.radioBtn1){
			gameLevel = 1;		// Easy
		} else if(v.getId() == R.id.radioBtn2) {
			gameLevel = 2;		// Normal
		} else if(v.getId() == R.id.radioBtn3) {
			gameLevel = 3;		// Hard
		}
	}
}


== GameStartActivity.Java ==



== ResultActivity.Java ==




= 레이아웃 =

인터페이스를 꾸미는 데 편리한 relative layout을 이용했습니다.


= 실행 화면 =

http://comp166-koreauniv.googlecode.com/files/Screenshot_2013-12-10-00-41-36.png

시작화면입니다.

http://comp166-koreauniv.googlecode.com/files/Screenshot_2013-12-10-00-41-47.png

easy 난이도는 한자리 숫자의 계산입니다.

http://comp166-koreauniv.googlecode.com/files/Screenshot_2013-12-10-00-41-57.png

normal 난이도는 두자리 숫자의 계산입니다.

http://comp166-koreauniv.googlecode.com/files/Screenshot_2013-12-10-00-42-05.png

hard 난이도는 세자리 숫자의 계산입니다.

http://comp166-koreauniv.googlecode.com/files/Screenshot_2013-12-10-00-42-16.png

정답 여부는 토스트를 띄워 알려줍니다.(오답)

http://comp166-koreauniv.googlecode.com/files/Screenshot_2013-12-10-00-42-28.png

정답 여부는 토스트를 띄워 알려줍니다.(정답)

http://comp166-koreauniv.googlecode.com/files/Screenshot_2013-12-10-00-42-45.png

제한 시간이 끝나면 결과를 알려줍니다.