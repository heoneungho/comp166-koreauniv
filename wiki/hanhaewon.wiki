#summary 메뉴판><
#labels 한혜원

= Introduction =
 원래 목적은 '레스토랑의 메뉴판입니다. 손님이 이 프로그램을 통해 직접 인원수를 입력하고 메뉴를 선택할 수 있습니다.' 였습니다. 하지만 너무 복잡하고 어려워서 간단하게 수정했습니다. 메뉴판에서 메뉴를 선택하면 총 합을 나타내주는 프로그램입니다.   

= Details =

- 프로그램을 실행시 메뉴판이 뜹니다. 원하는 메뉴를 선택하고 수량도 정할 수 있습니다.
- 메뉴를 모두 정했으면 정한 메뉴와 총합을 알려주는 프로그램입니다.
- 단점은 원래로 돌아갈 수 없어 다음 손님이 오면 다시 프로그램을 재시작해야합니다.
- 메뉴에 해당하는 키보드 숫자를 누르는 것을 통해 수량을 증가시킬수 있습니다. 
- 메뉴에 따른 수량을 일일이 입력받기 어려워 http://blog.naver.com/mmc2210?Redirect=Log&logNo=50126145975 를 참조하였습니다.

= Code =

{{
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.text.*;
import java.util.*;


public class Cashier extends JFrame {
		
	public static void main(String args[]) {
		
		Menu menu = new Menu();
		menu.launchFrame();  
	}	
}

class Menu extends JFrame implements KeyListener {

	private JFrame menuFrame;
	private JPanel menuNorthPanel,
				   menuSouthPanel,
				   menuCenterPanel,
				   menuTitlePanel,
				   menuDetailPanel,
				   menuChoicePanel;

	private JLabel menuStoreLabel,
				   menuTitleLabel,
				   menuHeaderLabel,
				   menuChoiceLabel[],
				   menuGuideLabel;
	

	public static String choice[] = {" 혜원 수제햄버거        ",
								   	" 혜원 수제치킨버거    ",
					   				" 혜원 수제새우버거    ",
					   				" 혜원 수제불고기버거",
					   				" 혜원 수제야채버거    ",
					   				" 콜라                               ",
					   				" 사이다                           ",
					   				" 아메리카노                  "};	
	
	public static int price[] = {3000,
					  				4000,
					  				3500,
					  				4000,
					  				4500,
					  				1500,
					  				1500,
					  				2000};
	
	public static int ordered[];
				   
	String option[] = {"얼마일까요~?"};
					

	public Menu() {
		menuFrame = new JFrame("어서오세요^^");
		menuFrame.getContentPane().setLayout(new BorderLayout(0,0));
		
		menuNorthPanel = new JPanel();
		menuNorthPanel.setLayout(new FlowLayout());
		menuNorthPanel.getBackground();
		
		menuSouthPanel = new JPanel();
		menuSouthPanel.getBackground();
				
		menuTitlePanel = new JPanel();
		menuTitlePanel.setLayout(new BorderLayout(10,10));
		menuTitlePanel.getBackground();
		
		menuDetailPanel = new JPanel();
		menuDetailPanel.setLayout(new GridLayout(2,1));
		menuDetailPanel.getBackground();
			
		menuCenterPanel = new JPanel();
		menuCenterPanel.setLayout(new BorderLayout(0,0));
		menuCenterPanel.getBackground();
		
		menuStoreLabel = new JLabel(" 혜원이의 행복한 수제버거가게 ");
		menuStoreLabel.getForeground();

		menuTitleLabel = new JLabel(" 어서오세요~", JLabel.CENTER);
		menuTitleLabel.getForeground();


		menuHeaderLabel = new JLabel("             메뉴"
									+"                                 가격"
									+"        수량");
		menuHeaderLabel.getForeground();

		
		menuChoicePanel = new JPanel();
		menuChoicePanel.setLayout(new GridLayout(choice.length+4,1,0,0));
		menuChoicePanel.getBackground();
		menuChoicePanel.add(menuHeaderLabel);

		menuChoiceLabel = new JLabel[choice.length + 2];
		ordered = new int[choice.length];
					
		for (int i = 0; i < choice.length; i++)	{
			
			ordered[i] = 0;
			
			menuChoiceLabel[i] = new JLabel("  [" + (i+1) + "]  " + choice[i]
										   +"      "+ price[i]
										   +"       "+ ordered[i]);
			menuChoiceLabel[i].getForeground();

			menuChoicePanel.add(menuChoiceLabel[i]);
		}
		
		menuChoiceLabel[choice.length] = new JLabel("  [0]  " + option[0]);

		menuChoiceLabel[choice.length].getForeground();

		menuChoicePanel.add(menuChoiceLabel[choice.length]);
		

		menuGuideLabel = new JLabel("");
		menuGuideLabel.getForeground();
	}


	public void launchFrame() {	

		menuFrame.setSize(200,350);
		
		menuTitlePanel.add(menuTitleLabel, BorderLayout.WEST);
		menuTitlePanel.add(menuDetailPanel, BorderLayout.EAST);
		menuNorthPanel.add(menuStoreLabel, BorderLayout.NORTH);
		menuSouthPanel.add(menuGuideLabel, BorderLayout.SOUTH);		
		menuCenterPanel.add(menuTitlePanel, BorderLayout.NORTH);
		menuCenterPanel.add(menuChoicePanel, BorderLayout.CENTER);
		menuFrame.getContentPane().add(menuNorthPanel, BorderLayout.NORTH);
		menuFrame.getContentPane().add(menuCenterPanel, BorderLayout.CENTER);
		menuFrame.getContentPane().add(menuSouthPanel, BorderLayout.SOUTH);
		
		menuFrame.pack();		
	
		menuFrame.addKeyListener(this);
		
		menuFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		menuFrame.setVisible(true);

	}
	
	private void refresh() {
		for (int i = 0; i < choice.length; i++)	{
						
			menuChoiceLabel[i].setText("  [" + (i+1) + "]  " + choice[i]
										   + "      " + price[i] + "       " + ordered[i]);
		}		
	}
	
	public void keyTyped(KeyEvent e) { }
	public void keyReleased(KeyEvent e) { }
	public void keyPressed(KeyEvent e) { 		
		switch(e.getKeyCode()) {
		case 49:
		case 50:
		case 51:
		case 52:
		case 53:
		case 54:
		case 55:
		case 56:
			ordered[e.getKeyCode() - 49]++;
			break;
		
		case 48:
			menuFrame.setVisible(false);
			SubTotal subTotal = new SubTotal();
			subTotal.launchFrame();
			break;
		}
	
		this.refresh();
	}
}


class SubTotal extends JFrame implements KeyListener {
	
	int EachTotal = 0;
	int Total = 0;

	private JFrame subTotalFrame;
	private JPanel subTotalNorthPanel,
				   subTotalSouthPanel,
				   subTotalCenterPanel,
				   subTotalTitlePanel,
				   subTotalDetailPanel,
				   subTotalOrderedPanel;
	
	private JLabel subTotalStoreLabel,
				   subTotalHeaderLabel,
				   subTotalOrderedLabel[],
				   subTotalGrandTotalLabel,
				   subTotalGuideLabel;
							   					
	public SubTotal() {
		subTotalFrame = new JFrame("**총액입니다**");
		subTotalFrame.getContentPane().setLayout(new BorderLayout(0,0));
		
		subTotalNorthPanel = new JPanel();
		subTotalNorthPanel.setLayout(new FlowLayout());
		subTotalNorthPanel.getBackground();
		
		subTotalSouthPanel = new JPanel();
		subTotalSouthPanel.getBackground();
				
		subTotalTitlePanel = new JPanel();
		subTotalTitlePanel.setLayout(new BorderLayout(10,10));
		subTotalTitlePanel.getBackground();
		
		subTotalDetailPanel = new JPanel();
		subTotalDetailPanel.setLayout(new GridLayout(2,1));
		subTotalDetailPanel.getBackground();
			
		subTotalCenterPanel = new JPanel();
		subTotalCenterPanel.setLayout(new BorderLayout(0,0));
		subTotalCenterPanel.getBackground();
		
		subTotalStoreLabel = new JLabel("혜원이의 행복한 레스토랑입니다. ");
		subTotalStoreLabel.getForeground();



		
		subTotalHeaderLabel = new JLabel("    메뉴"
										+"                                  가격"
										+"       수량"
										+"    총액 ");
		subTotalHeaderLabel.getForeground();

		
		subTotalOrderedPanel = new JPanel();
		subTotalOrderedPanel.getBackground();
		subTotalOrderedPanel.add(subTotalHeaderLabel);
		
		subTotalOrderedLabel = new JLabel[Menu.choice.length];
		
		int count = 0;
					
		for (int i = 0; i < Menu.choice.length; i++)	{
			
			if (Menu.ordered[i] > 0) {
			
			EachTotal = Menu.ordered[i] * Menu.price[i];
			Total += EachTotal;
			count++;
			
			subTotalOrderedLabel[i] = new JLabel("  " + Menu.choice[i]
										   	   +"    " + Menu.price[i] 
										       +"        " + Menu.ordered[i]
										       +"       " + EachTotal);
			subTotalOrderedLabel[i].getForeground();
			
			subTotalOrderedPanel.add(subTotalOrderedLabel[i]);
			
			Menu.ordered[i] = 0;
			}
		}
		
		subTotalGrandTotalLabel = new JLabel(" 총액   :  " + Total);
		subTotalGrandTotalLabel.getForeground();	
		
		subTotalOrderedPanel.add(subTotalGrandTotalLabel);
				

		subTotalGuideLabel = new JLabel("");
		subTotalGuideLabel.getForeground();

		subTotalOrderedPanel.setLayout(new GridLayout(count+2,1,0,0));
	}


	public void launchFrame() {	

		subTotalFrame.setSize(200,350);
	
		subTotalTitlePanel.add(subTotalDetailPanel, BorderLayout.EAST);
		subTotalNorthPanel.add(subTotalStoreLabel, BorderLayout.NORTH);
		subTotalSouthPanel.add(subTotalGuideLabel, BorderLayout.SOUTH);		
		subTotalCenterPanel.add(subTotalTitlePanel, BorderLayout.NORTH);
		subTotalCenterPanel.add(subTotalOrderedPanel, BorderLayout.CENTER);
		subTotalFrame.getContentPane().add(subTotalNorthPanel, BorderLayout.NORTH);
		subTotalFrame.getContentPane().add(subTotalCenterPanel, BorderLayout.CENTER);
		subTotalFrame.getContentPane().add(subTotalSouthPanel, BorderLayout.SOUTH);
		
		subTotalFrame.pack();		

		subTotalFrame.addKeyListener(this);
		
		subTotalFrame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		subTotalFrame.setVisible(true);
	}

	public void keyTyped(KeyEvent e) { }
	public void keyReleased(KeyEvent e) { }
	
	public void keyPressed(KeyEvent e) { }
}

}}