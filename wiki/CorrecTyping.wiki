2011190727 김성운

= Introduction =

블랙젯 게임으로 바꿨습니다. Blackjet game = 숫자 21에 가까울 수록 이기는 게임 카드 두장을 미리 받고 User와 Dealer의 21에 가까워지는 머리싸움 게임, 참고로 도박성이 있을수 있어서 배팅은 하진 않겠습니다. ( 돈걸어서 딜러가 파산나면 이기는 게임형식으로 진행하려다가 복잡해질 것 같아서 뺀 것은 아닙니다. ㅎㅎ)

= Background =

씨언어와 지금 배우고있는 중인 자바를 활용해서 이 프로젝트를 완성해 평가받아야 하기 때문이다.

= Detail =

이 게임을 만들기 위한 클래스

Blackjet() : 블랙젯 게임을 실행시키는 메인 클래스
KeyboardRead() : 키보드 입력은 받는 보조 클래스

이 게임을 위한 함수

Player() : 게임을 하는 사용자가 사용할 함수, 카드를 받을지 여부를 정해서 21에 가깝게 가게하는 Player도 Dealer와 마찬가지로 선택을 할 수 있어야한다.
Dealer() : Player의 상대 함수이다. 유저가 자신의 카드보다  21에 더 가까우면 카드를 한장 더 받아 지든 이기든 해야한다.
() : 카드를 랜덤으로 섞어주고 결과가 매번 다르게 나와야하는 것을 만들어주는 함수
() : 카드 배열을 만들고 그 배열값을 지정해준다. J,Q,K 의 값도 지정해주기 위   해서 컴퓨터는 J,Q,K가 11,12,13인지 모르기 때문이다.
Help() : 게임 진행의 처음 시작함수, 게임을 모르는 사람에게 블랙젯 게임을 약간 설명해준다.

이 게임이 돌아가는 순서

게임이 실행되면 KeybordRead클래스를 실행시켜 키보드 입력을 받아주고 클릭에 따라  Help() 함수가 실행되면서 게임의 실행방법과 어떻게 돌아가는지를 알려준다. 그 후에 게임을 할려면 p를 누르라고 지시한다.  p를 클릭 시 User()가 실행되면서 게임은 시작된다.  게임이 시작되면서 Rand()함수가 카드를 초기화시키고 랜덤하게 섞는다.  User()가 실행되면서 Card()함수의 카드를 선택해 가져와서 Dealer()랑 반복으로 주거니 받거니 게임을 진행해 나간다. User()차례에선 더받을지 말지 정하고 Dealer()는 User()의 선택에 따라 자동적으로 진행할 수 밖에 없게 만든다. 따라서 이 게임은 1인용이며 카드 숫자의 합이 21에 가까울수록 이기는 게임으로 만든다.

=Using Code=


import java.util.*;
import java.io.*;
import java.awt.event.*;
import javax.swing.*;
import java.awt.*;

public class Blackjet	{
	
	private KeybordRead Read = new KeybordRead();
	
public String select()	{
		
		String card[] = {"2", "3", "4", "5", "6", "7", "8", "9", "10", "A", "J", "Q", "K"};// 카드 1~ 13지정
		String card2[] = {"♠", "♧", "◆", "♡" }; // 카드 종류
	
		int rand1 = (int) (Math.random() * 13);
		int rand2 = (int) (Math.random() * 4);
		
		int a = Integer.parseInt(card[rand1]);
		
		if(a > 10)
			a = 10;
	
		int c = 0;
		c ++;
		int b = 0;
		
		if(c % 2 == 1)
			b = sum1(a);
		else
			b = sum2(a);
		
		String pharse = card2[rand2] + " " + card[rand1] +" " + "카드를 뽑았습니다. "+ "  "+  "지금까지 카드 숫자의 합은" + " " +b + "입니다."; // 카드 종류를 믹스 시켰다.
		
		return pharse;
		
	}
	
	public void GamePlay()	{
		Player(1);
		Dealer(1);
		Player(2);
		Dealer(2);
	}
	
	
	private void Player(int p)	{
		if(p == 1)	{
		int a = 0;
		
		while	(a<2)	{
			a++;
			String s = select();
			System.out.println("Player가 " +  s);
			}
		}
		
		if(p == 2)	{
			int c = sum1(0);
			
			if(c < 21)	{
				System.out.println("카드를 더 뽑으시려면 1번, 더 이상 안 뽑으시려면 2번을 누르세요.");
				String s = Read.getInput("Enter a number");
				int a = Integer.parseInt(s);
					if(a == 1)	{
						select();
						Player(2);
					}
					if(a == 2)
						finish();
			}
			
			if(c == 21)	{
				System.out.println("Player가 이겼습니다.");
			}
			
			if(c > 21)	{
				System.out.println("Player가 패배하였습니다.");
			}
			
		}
	}
	
	private void Dealer(int q)	{
		if(q == 1)	{
		int a = 0;
		
		while	(a<2)	{
			a++;
			String s = select();
			System.out.println("Dealer가 " +  s);
			}
		}
		
		if(q == 2)	{
			if(sum1(0) > sum2(0))
				select();
			if(sum2(0) > 21)
				System.out.println("Dealer가 패배하셨습니다.");
		}
		
	}
	
	private void finish()	{
		if(sum1(0) > sum2(0))
			System.out.println("Player가 Dealer를 이겼습니다.");
		else
			System.out.println("Player가 Dealer에게 패배하였습니다.");
	}
	
	private int sum1(int a)	{
		int sum = 0;
		sum += a;
		return sum;
	}
	
	private int sum2(int a)	{
		int sum = 0;
		sum += a;
		return sum;
	}
	
	public void GameStart()	{
		
		while(true) {
			System.out.println("Enter 1 is Start, 2 is Quit the game, 3 is Help");
			
			String s = Read.getInput("Enter a number");
			int a = Integer.parseInt(s);
			
			if(a == 1)	{
				GamePlay();
				break;
			}
			if(a == 2) {
				break;
			}
			
			if(a == 3)	{
				Help();
				break;
			}
		}
	}
	
	public void Help()	{
		System.out.println("블랙젝 하는 방법\n	- 블랙잭은 핸디와 딜러가 겨루어서 숫자 21에 가까운 사람이 이기는 게임.\n " +
				" - 에이스(A)는 임의적으로 숫자 1이나 11로 사용이 가능. \n - J, Q, K 는 숫자 10으로 통일.\n" + "- 블랙잭은 2장의 카드로 21이 되는 것이기 때문에 A 와 10 으로만 가능.\n"
			+	"- 딜러는 17이상이 될 때까지 무조건 패를 받아야 함.\n" + "-Player가 블랙잭인 경우에는 딜러의 패에 상관없이 무조건 승리.");
		GameStart();
	}
	
public static void main (String[] args)	{
		Blackjet game = new Blackjet();
		game.GameStart();
	}
}



import java.io.*;
import java.io.IOException;
import java.io.InputStreamReader;

public class KeybordRead {

	public String getInput(String prompt)	{
			String inputLine = null;
			System.out.print(prompt+ "");
			try	{
				BufferedReader is = new BufferedReader(new InputStreamReader(System.in));
				inputLine = is.readLine();
				if(inputLine.length() ==0)	return null;
			}
			catch(IOException e){	
				System.out.println("IOException: " + e);
			}
			return inputLine;
		}

}




=Help=

채정민 교수님 도와주실 거라 믿습니다..........

Add your content here.  Format your content with:
  * Text in *bold* or _italic_
  * Headings, paragraphs, and lists
  * Automatic links to other wiki pages