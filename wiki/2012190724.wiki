#summary 수업중 실습하는 내용을 올리게 되는 실습페이지입니다. 페이지의 내용은 각 학생에 의해서 관리됩니다.

<wiki:toc max_depth="1" />

= 01. 껍질을 깨고:간단한 소개 =

*48p BeerSong* _문제해결하기, 주석달기_

{{{

public calss BeerSong {
public static void main (String[] args) {
int beerNum = 99;
String word = "bottles"; // 복수형

while (beerNum > 0) {

System.out.println("beerNum + " " + word + " of beer on the wall");
System.out.println("beerNum + " " + word + " of beer.");
System.out.println("Take one down.");
System.out.println("Pass it around.");
beerNum = beerNum -1;

if (beerNum == 1) {
 word = "bottle"; //단수형(한병인경우)
}

if (beerNum > 0) {
System.out.println("beerNum + " " + word + " of beer on the wall");
}
else {
System.out.println("No more bottles of beer on the wall");
}//else문 끝
}//while순환문 끝
}//main 클래스 끝
}//클래스 끝

}}}

*50p PhraseOMatic* _wordListOne, wordListTwo, wordListThree를 변경_

{{{

}}}

*52p 집중토론* _요약_

 * 자바 가상 머신: 프로그램을 실행시키는 역할을 한다. 또 보안관련 작업을 수행한다
 * 컴파일러: 어떤 프로그램이 실행될 때 절대로 일어나면 안 되는 일을 방지한다.

*55p 컴파일러가 되어봅시다* _구현후 주석달기_

{{{ 
A
class Exercise1b {
public static void main(Strinc [] args) {
int x = 1;
while ( x < 10 ) {
X = X+1;
if (x > 3) {
System.out.println("big x");
}
}
}
}

B
Class Foo{
public static void main(String [] args) {
int x = 5;
while ( x > 1){
x = x -1;
if(x<3){
System.ot.println("small x");
}
}
}
}

C

class Exercise1b {
public static void main(String [] args){

int x = 5;
while ( x > 1) {
x = x - 1;
if ( x < 3) {
System.out.println("small x");
}
}
}
}
}}}


= 02. 객체마을로의 여행:객체에 대해 알아봅시다  =

*68p~ 클래스* _요약_

 * 인스턴스 변수: 객체에서 자신에 대해 아는 것, 객체의 상태(데이터)를 나타낸다. 
 *메소드: 객체에서 자신이 하는 것. 
 *클래스: 객체를 만들기 위한 용도로 사용. 객체를 만들기 위한 청사진. 
 *테스트용 클래스: 새로운 클래스를 테스트하기 위한 클래스. 



  68p Television 채워넣기 
 *인스턴스 변수: color, power, channel 
 *메소드: power(), channelUp(), ChannelDown() 


*72p GuessGame* _게임에 참여하는 사람 수를 4명으로 변경_

{{{

}}}

*76p 컴파일러가 되어봅시다* _구현후 주석달기_

{{{

}}}

= 03. 네 변수를알라:원시 변수와 레퍼런스  =

*83p~ 변수* _요약_

 * 원시변수 vs 레퍼런스변수:
 
*96p Dog* _수많은 개를 만들어 난장판 만들기_

{{{

}}}

*97p 컴파일러가 되어봅시다* _구현후 주석달기_

{{{

}}}

*101p 레퍼런스 도용사건* _요약_

 * 누가 이겼나요?:
 * 문제가 된 부분은 어딘가요?:

= 04. 객체의 행동:객체의 상태가 메소드의 속성에 미치는 영향  =

*105p~ 객체* _요약_

 * 캡슐화:
 * 게터와 세터:
 * 인스턴스 변수 vs 지역 변수:
 
*107p Dog* _실행_

{{{

}}}

*122p 컴파일러가 되어봅시다* _구현후 주석달기_

{{{

}}}


= 05. 메소드를 더 강력하게:흐름 제어, 연산 등  =

*135p XP* _요약_

 * 익스트림 프로그래밍이란?
 
*137p~ 간단한 닷컴 게임* _구현후 주석달기_

{{{

}}}

= 06. 자바 라이브러리:전부 다 직접 만들어서 쓸 필요는 없습니다  =

*162p 닷컴 게임:첫번째 옵션* _구현후 주석달기_

{{{

}}}

*163p 닷컴 게임:두번째 옵션* _구현후 주석달기_

{{{

}}}

*173p 닷컴 게임:세번째 옵션* _구현후 주석달기_

{{{

}}}

*174p 진짜 닷컴 게임* _구현후 주석달기_

{{{

}}}

= 07. 객체마을에서의 더 나은 삶:미래를 준비합시다  =

*199p~ 상속과 다형성* _요약_

 * 상속:
 * 다형성:

*208p 클래스 계층 구조* _클래스로 구현_

{{{

}}}
 
*224p 오버라이드와 오버로딩* _요약_

 * 오버라이드:
 * 오버로딩:

*227p 컴파일러가 되어봅시다* _구현후 주석달기_

{{{

}}}

= 08. 심각한 다형성:추상 클래스와 인터페이스  =

*231p~ 심각한 다형성* _요약_

 * 인터페이스:
 * 다형성:
 * 추상 클래스:
 * 추상 메소드:
 * 다중 상속:

= 09. 객체의 삶과 죽음:생성자와 메모리 관리  =

*269p~ 객체의 삶과 죽음* _요약_

 * 힙에서의 변수: 인스턴스변수라고 하는데, 클래스 내에서 선언된 변수이고 메소드 내에서 선언한 것은 인스턴스 변수가 아니다. 인스턴스 변수는 각각의 개별 객체가 가지고 있는 필드를 나타낸다. 

 * 스택에서의 변수:지역변수라고 하는데, 지역변수는 메소드 안에서 선언한 것을 뜻한다.지역변수는 임시변수이며, 메소드가 스택에 들어있는동안만 살아있다.

 * 생성자:어떤 클래스 유형에 대해 new 키워드를 사용할 때 실행되는 코드이다. 생성자명은 반드시 클래스명과 같아야 하며 리턴 유형은 없다. 생성자를 이용해 인스턴스변수를 초기화 할 수 있고, 클래스에 생성자가 없으면, 컴파일러에서 기본 생성자를 만든다.

 * 널 레퍼런스: 프로그래머가 직접 기본값을 지정하지 않아도 인스턴스 변수에는 자동으로 기본값이 지정된다. 객체에 대한 레퍼런스의 기본값은 null이고 이것을 널 레퍼런스라고 부른다.

*298p 집중토론* _요약_

 * 인스턴스 변수: 인스턴스 변수는 객체를 지원하는 역할을 하고, 상태는 인스턴스 변수에 저장된 값이다. 객체 안에서 살며 객체의 상태를 저장한다. 자신이 속한 객체가 가비지 컬렉터에 의해 처리된다면 인스턴스 변수도 함께 삭제된다.

    지역 변수: 변수: 

*302p 5분 미스터리* _구현후 주석달기_

{{{

}}}

= 10. 숫자는 정말 중요합니다:수학, 포매팅, 래퍼, 통계  =

*307p~ 숫자* _요약_

 * 정적 메소드:
 * 정적 메소드를 선언하는 방법:
 * static final:
 * 널 레퍼런스:
 * 오토 박싱:
 * 정적 임포트:

*339p Calendar* _구현후 주석달기_

{{{

}}}

*342p 집중토론* _요약_

 * 인스턴스 변수:
 * 지역 변수: 

*344p 컴파일러가 되어봅시다* _구현후 주석달기_

{{{

}}}

= 11. 위험한 행동:예외처리  =

*357p try/catch* _구현후 주석달기_

{{{

}}}

*376p~ 첫번째 사운드 애플리케이션* _구현후 주석달기_

{{{

}}}

*380p~ 두번째 사운드 애플리케이션* _구현후 주석달기_

{{{

}}}

= 12. 그래픽이야기:GUI, 이벤트처리, 내부 클래스에 대한 소개  =

*389p~ 첫번째 GUI:버튼* _구현후 주석달기_

{{{

}}}

*394p~ ActionEvent* _구현후 주석달기_

{{{

}}}

*405p 버튼과 원의색* _구현후 주석달기_

{{{

}}}

*413p 두개의 버튼과 원의색* _구현후 주석달기_

{{{

}}}

*418p 간단한 애니메이션* _구현후 주석달기_

{{{

}}}

*420p 뮤직 비디오* _구현후 주석달기_

{{{

}}}

= 13. 스윙을 알아봅시다:레이아웃 관리와 구성요소  =

*452p 비트박스 프로그램* _구현후 주석달기_

{{{

}}}

= 14. 객체 저장:직렬화와 입출력  =

*496p 비트박스 프로그램* _구현후 주석달기_

{