#labels 2009190708이하정
 그림 맞추기 - 2011년 2학기 자바 프로젝트 소개 페이지 


= Introduction =

명화 검색 프로그램에서 명화를 로드해서 조각을 나눠 맞추는 간단한 게임으로 계획을 수정했습니다.

= Details =

import java.awt.Image;

import java.awt.Insets;

import java.awt.Graphics;

import java.awt.MediaTracker;

import java.awt.event.ActionEvent;

import java.awt.event.ActionListener;

import java.util.Random;

import java.awt.Toolkit;

import java.net.URL;


import javax.swing.Icon;

import javax.swing.ImageIcon;

import javax.swing.JApplet;

import javax.swing.JButton;

//필요할 걸로 예상되는 class들....

public class XPuzzle extends JApplet implements ActionListener

{

ImageIcon[][] sprites;

JButton[][] cell;

int moving, slice = 2; //2*2의 배열을 이용한 그림 퍼즐

JButton b;


public XPuzzle() {

b = new JButton("조각 섞기");

b.addActionListener(new ActionListener() {

public void actionPerformed(ActionEvent e) {

shuffle();

}

}}



// 원본 이미지를 가져오는 메소드

protected Image loadImage(String filename)

{

Image sourceImage = null;

try

{

URL url = new URL(getDocumentBase(),filename);

sourceImage = Toolkit.getDefaultToolkit().getImage(url);

} catch(Exception e)

{

sourceImage = null;

System.out.println("Image ("+filename +") not found !");

}

if(sourceImage != null)

{

try {

MediaTracker tracker = new MediaTracker(this);

tracker.addImage(sourceImage, 0);

tracker.waitForID(0);

} catch(Exception e) {e.printStackTrace(); } //eclipse error처리 기능으로 일단....  error처리를 했습니다.

}

return sourceImage;

}

//원본 이미지를 가져오고, 결과값 -이미지 리턴

protected void shuffle() //조각 섞는 메쏘드.

{

boolean exist[] = new boolean[3];

Random random = new Random();

int max = slice*slice -1;

for (int i = 0; i < slice; i++) {

for(int j =0; j <slice; j++){

....미완성
}

//actionlistener..??이론...공부
action event를 받기위한 interface. 버튼을 누르면 click event가 발생이 되고 이 발생된 click event를 actionListener가 받게 되는것. 
해당 component에 actionListener를 등록을 해주어야 actionListener가 귀를 귀울이고 어떤 event가 발생되는지를 들어준다.