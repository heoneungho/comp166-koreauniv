#summary 2012190701 김근영 본격 달무티게임
#labels 2012190701김근영


= Introduction =

본격 달무티게임


= Details =

*달무티를 할 수 있도록 도와주는 게임입니다

*달무티란 1~12까지의 숫자가 적힌 카드가 있고 조커와 1은 1장 2는 2장 3은 3장...12는 12장이 있는 게임입니다.
이를 플레이어들이 나누어 가지고 게임을 시작합니다.
게임의 룰은 간단합니다. 예를 들어 한 사람이 7을 5장을 냈다고 하면 그 다음 차례의 사람은 7보다 낮은 숫자 즉 6이하의 숫자의 카드를 먼저 낸 사람과 같은장수, 여기서는 5장을 내면 되는 것입니다. 이렇게 카드를 내려놓다가 제일 먼저 카드를 다 내려놓은 사람이 왕이 되고 제일 늦게까지 남은 사람은 노예가 되는 게임입니다.

*
{{{
/*클래스 이름이나 상속 등이 계속 바뀌기 때문이 바뀌는 대로 업로드할 예정입니다.*/

import java.util.*;

abstract class GameMaster
{
	ArrayList<Card> arrangeList = new ArrayList<Card>();
	Card c;
	
	public final void arrangeCard()
	{
		for(int i = 0 ; i <12 ; i++)
		{
			for(int j = 0 ; j < 12 ; j++)
			{
				c = new Card(i+1);
				arrangeList.add(c);
				if(i == j)
					break;
			
			}
		}
	}
	
	public final void cardMix(ArrayList<Card> c)
	{
		Collections.shuffle(c);
	}
}

class Player extends GameMaster
{
	boolean canPut;
	ArrayList<Card> myList = new ArrayList<Card>();
	
	Player(int n)
	{
		switch(n)
		{
			case 1: for(int i = 0 ; i < 19 ; i++)
				myList.add(arrangeList.get(i)); break;
			case 2: for(int i = 19 ; i < 39 ; i++)
				myList.add(arrangeList.get(i));	break;
			case 3: for(int i = 39 ; i < 58 ; i++)
				myList.add(arrangeList.get(i));	break;
			case 4: for(int i = 58 ; i < 78 ; i++)
				myList.add(arrangeList.get(i));	break;
		}
	}
	private void putDownCard(Card c,int n)
	{
		for(int i = 0 ; i < n ;i++)
			myList.remove(c);
	}
	
	private void theKing()
	{
		System.out.println("야 내가 왕이다!d");
	}
	
	private void theSlave()
	{
		System.out.println("저는 노예입니다. 굽신굽신");
	}
}

class Card
{
	private int cardNum;//카드의 번호입니다.
	
	Card(int cardNum)
	{
		this.cardNum = cardNum;
	}
	public int getCardNum()
	{
		return cardNum;
	}
}

import java.util.*;

public class GameHelper
{

	Player p1 = new Player(1);
	Player p2 = new Player(2);
	Player p3 = new Player(3);
	Player p4 = new Player(4);

}

import java.util.*;

class TestCode
{
	static ArrayList<Card> arrangeList = new ArrayList<Card>();
	Card c;
	
	public final void arrangeCard()
	{
		for(int i = 0 ; i <12 ; i++)
		{
			for(int j = 0 ; j < 12 ; j++)
			{
				c = new Card(i+1);
				arrangeList.add(c);
				if(i == j)
					break;
			
			}
		}
	}
	
	public final void cardMix(ArrayList<Card> c)
	{
		Collections.shuffle(c);
	}

	
	public static void main(String[] args)
	{
		TestCode t = new TestCode();
		t.arrangeCard();
		t.cardMix(arrangeList);
		
		A a1 = new A(1);
		A a2 = new A(2);
		A a3 = new A(3);
		A a4 = new A(4);
		
		a1.printArray();
		a2.printArray();
		a3.printArray();
		a4.printArray();

	}
}

class A extends TestCode
{
	ArrayList<Card> myList = new ArrayList<Card>();
	
	A(int n)
	{
		switch(n)
		{
			case 1: for(int i = 0 ; i < 19 ; i++)
					myList.add(arrangeList.get(i)); break;
			case 2: for(int i = 19 ; i < 39 ; i++)
					myList.add(arrangeList.get(i));	break;
			case 3: for(int i = 39 ; i < 58 ; i++)
					myList.add(arrangeList.get(i));	break;
			case 4: for(int i = 58 ; i < 78 ; i++)
					myList.add(arrangeList.get(i));	break;
		}	

	}
	void printArray()
	{
		for(Card tmp : myList)
		{
			System.out.print(tmp.getCardNum()+"\t");
		}
		System.out.println("");
	}
}

class Card
{
	private int cardNum;//카드의 번호입니다.
	
	Card(int cardNum)
	{
		this.cardNum = cardNum;
	}
	int getCardNum()
	{
		return cardNum;
	}
}

}}}