#labels 2012190724
자동수강신청프로그램입니다
= Introduction =

_꿀강은 적고 사람은 많다. 그들과의 경쟁에서 이겨보자._

자동 수강신청 프로그램입니다. 수강신청을 할 때 학생은 엔터키를 눌러야 할 수도 있고, 마우스로 클릭을 해야 할 수도 있습니다. 하지만 물리적인 입력으로는 다른 경쟁자들보다 빨리 수강신청을 할 수 없습니다. 따라서 학생이 필요한 입력을 모두 미리 받아서 컴퓨터가 그 입력을 자동으로 수행하게 된다면 수강신청에서 승리할 수 있습니다. 이러한 목적을 수행하는 프로그램을 만들 것입니다.

= Details =

*1. UI구상*

프로그램은 총 4개의 창으로 구성됩니다. 프로그램을 실행 시키면 사용자가 처음으로 접하는 메인화면과, 나머지 3가지의 화면입니다. 메인화면에는 5개의 버튼이 있고, 이 버튼 중에서 3개의 버튼을 각각 누르면 나머지 3가지의 화면이 각각 나타나게 됩니다.

메인화면, 키보드 설정화면, 마우스 설정화면, 시간 설정화면

*① 메인화면* : 프로그램을 실행 시켰을 때 사용자가 처음으로 접하는 화면입니다.
메인화면을 크게 세 부분으로 나누고, 맨 위 한쪽에는 현재 시간을 보여줍니다. 한쪽에는 사용자가 키보드, 마우스 설정을 통해 추가한 조작을 순서대로 보여줍니다(입력 리스트 부분). 다른 한쪽에는 사용자가 설정 할 수 있는 버튼이 5개위치 합니다(버튼 부분). 버튼의 종류는 다음과 같습니다.

*키보드 , 마우스, 시간, 지우기, 실행*

키보드 – 사용자가 키보드로 입력하고 싶은 키를 설정하여 입력리스트에 조작을 추가합니다.
마우스 – 사용자가 마우스로 입력하고 싶은 유형(우 클릭, 좌 클릭, 클릭유지, 클릭 떼기, 마우스 포인터 위치)을 설정하여 입력 리스트에 조작을 추가합니다.
시간 – 사용자가 설정을 마치고 순서대로 배열된 입력 리스트 안의 모든 입력의 동작을 1주기라고 한다면, 1주기와 그 다음 주기사이의 시간간격을 설정합니다.
지우기 – 사용자가 추가한 조작을 삭제합니다.
실행 – 사용자가 입력 리스트 추가를 마친 후, 실행할 때 쓰입니다.

또한 실행을 중지하는 키는 F2로 설정 할 것이고, 메인화면에
*“실행을 중지하려면 F2키를 누르시오”*
라고 출력하여 사용자가 중지 버튼을 알 수 있도록 할 것입니다.

*② 키보드 설정 화면* : 사용자가 프로그램을 통해 실제로 입력하고자 하는 키를 미리 추가하는 화면입니다. 이 화면은 크게 두 부분으로 나뉩니다. 한쪽은 키를 입력받는 부분, 다른 한 쪽은 키를 한번 누를 것인지, 누른 상태를 유지할지 선택하는 부분입니다.

*③ 마우스 설정 화면* : 사용자가 프로그램을 통해 실제로 입력하고자 하는 마우스의 동작을 미리 추가하는 화면입니다. 이 화면은 크게 세 부분으로 나뉩니다. 첫 번째 부분은, 화면에서 마우스 포인터의 위치를 x, y 좌표를 사용해 알려주는 부분입니다. x는 가로방향이며 y는 세로방향 입니다. 두 번째 부분은, 마우스의 입력 상태를 선택하는 부분입니다. 선택 유형은 다음과 같습니다.

*왼쪽 클릭, 왼쪽 누른 상태, 오른쪽 클릭, 오른쪽 누른 상태, 손 떼기, 이동*

*④시간 설정 화면* : 사용자가 설정을 마치고 순서대로 배열된 입력 리스트 안의 모든 입력의 동작을 1주기라고 한다면, 1주기와 그 다음 주기사이의 시간간격을 설정합니다. 이 화면은 사용자가 원하는 시간을 입력 받는 부분 하나로만 구성되어 있습니다.

*2. 클래스/인터페이스 설정*

*(1) 메인 클래스(mainSugang)* 

{{{
public class mainSugang{
public static void main(String[] args) {                

	       System.out.println("실행을 중지하려면 F2를 누르시오");

PresentTime(); //현재 시간을 보여줌

States(); //입력이 추가 된 상태를 순서대로 보여주는 부분

Buttons(); //키보드, 마우스, 시간, 지우기, 실행 버튼 –각각의 기능을 할 수 있게 연결

	}
}
}}}

*(2) 키보드 설정화면*

{{{
public class KeySetting{

System.out.println("추가할 키를 입력하세요");
Keyscan(); // 실제로 프로그램을 통해 입력하고자 할 키를 입력받음

KeyStatesChoice(); // 키의 상태(한번누름, 계속누름) 선택

finish(); //설정 완료
   
}}}

*(3) 마우스 설정 화면*

{{{
public class MouseSetting() {

WhereX(); // 마우스 포인터의 X좌표 보임
WhereY(); // 마우스 포인터의 Y좌표 보임

MouseStatesChoice(); // 마우스의 상태 설정

ScanX(); // 마우스 포인터의 X좌표 입력
ScanY(); // 마우스 포인터의 Y좌표 입력

finish(); //설정 완료

}}}

*(4) 시간 설정화면*

{{{
public class TimeSetting() {

System.out.println("작동 간격을 결정하는 시간을 입력하세요");

ScanTime(); //원하는 시간을 입력

finish(); //설정 완료
}}}


*(5) 중지*

{{{
public class End() {}//F2키로 중지할 수 있도록 만들 예정
}}}
  