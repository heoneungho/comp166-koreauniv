#summary 정사각형 퍼즐맞추기 게임
#labels 2013190728_이지현

= Introduction =

 <노인 분들의 치매예방에도 도움이 되고, 심심할 때 무료함을 달래 줄 수 있는 정사각형 퍼즐 맞추기 게임!>

 * 정사각형 모양을 여러가지 모양의 퍼즐들로 임의로 자른다(테트리스 블럭 모양).
 * 잘라진 모양의 퍼즐들을 다시 원래대로 정사각형 모양으로 만들면 끝나는 게임
 * 치매 예방 및 노인분들이 고민하며 재미있게 할 수 있는 게임

= Modification = 

 * 노인분들이 하시기에 6*6 퍼즐은 어려운 감이 있어서 level을 선택 할 수 있게 수정하였습니다. Easy모드는 5*5 정사각형 퍼즐, Hard모드는 6*6 정사각형 퍼즐로 만들었습니다.

= Details = 
 
[http://comp166-koreauniv.googlecode.com/files/mainback.png]
 * 메인 화면 모습입니다. GameStart 버튼과 HowToPlay 버튼이 있습니다.

[http://comp166-koreauniv.googlecode.com/files/HowToback.png]
 * HowToPlay 버튼을 눌렀을 때의 화면입니다. 게임 방법에 대한 설명이 있습니다.

[http://comp166-koreauniv.googlecode.com/files/Levelback.png]
 * GameStart 버튼을 눌렀을 때 나오는 화면입니다. 새롭게 추가된 화면으로 게임의 레벨을 결정할 수 있습니다.

[http://comp166-koreauniv.googlecode.com/files/Easymode.png]
 * Easymode 버튼을 눌렀을 때 나오는 게임 화면입니다. 5*5크기의 정사각형이 여러가지 퍼즐모양으로 잘라진 것을 볼 수 있습니다.

[http://comp166-koreauniv.googlecode.com/files/Hardmode.png]
 * Hardmode 버튼을 눌렀을 때 나오는 게임 화면입니다. 6*6크기의 정사각형이 여러가지 퍼즐모양으로 잘라진 것을 볼 수 있습니다.

= Code = 

 * 저는 이 게임을 만들면서 Project를 총 3개 만들었습니다. 먼저 맨 처음 메인 화면과 HowToPlay 화면, Level선택화면을 연결해 주는 project인 FastGameJH (전에 만들던 순발력 게임 프로젝트를 사용하여 이름이 FastGameJH입니다.) 와 TetrisPuzzle 프로젝트, TetrisPuzzle2 프로젝트 입니다.
 * Easymode,Hardmode 버튼을 눌렀을 때 이클립스 내에 있는 다른 프로젝트의 package로 바로 연결될 수 있게 만들었습니다.

------------------------------------------------------------------------

1. FastGameJH 코드
 * 그럼 맨 처음으로 각각의 화면을 연결 시켜주는 프로젝트인 FastGameJH를 살펴보겠습니다.
[http://comp166-koreauniv.googlecode.com/files/fastgame.png]

1.MainActivity 코드

package com.example.fastgamejh;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageButton;

public class MainActivity extends Activity {
	
	private ImageButton StartGame_btn;
	private ImageButton HowToPlay_btn;
//이미지 버튼 변수를 설정해 줍니다.

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_main);
		
		StartGame_btn=(ImageButton)findViewById(R.id.imageButton1);
		HowToPlay_btn=(ImageButton)findViewById(R.id.imageButton2);
		
		//버튼에 대한 리스너를 설정합니다.

		StartGame_btn.setOnClickListener(new OnClickListener() {
//마우스 입력을 받는 함수를 실행합니다.			
			@Override
			public void onClick(View v)
			{
				Log.i("onClick","Food");
				Intent intentLevel = new Intent(MainActivity.this, Level.class);
				startActivity(intentLevel);
//클릭시 levelActivity로 이동을 합니다.
			}
		});
		
		HowToPlay_btn.setOnClickListener(new OnClickListener() {			
			@Override
			public void onClick(View v)
			{
				Log.i("onClick","Food");
				Intent intentHowToPlay = new Intent(MainActivity.this, HowToPlay.class);
				startActivity(intentHowToPlay);
//클릭시 HowToPlayActivity로 이동을 합니다.
			}
		});
		
	
		
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.main, menu);
		return true;
	}

}

2. HowToPlay 코드

package com.example.fastgamejh;

import android.os.Bundle;
import android.app.Activity;
import android.view.Menu;

public class HowToPlay extends Activity {

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_how_to_play);
	}

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.how_to_play, menu);
		return true;
	}

}

3. Level 코드

package com.example.fastgamejh;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.Menu;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;

public class Level extends Activity {
	
	private Button EasyMode_btn;
	private Button HardMode_btn;
//버튼형 변수를 설정해 줍니다.
	
    @Override
    public void onCreate(Bundle savedInstanceState) {
    	

        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_level);

		EasyMode_btn=(Button)findViewById(R.id.button1);
		HardMode_btn=(Button)findViewById(R.id.button2);

		EasyMode_btn.setOnClickListener(new OnClickListener() {			
			@Override
			public void onClick(View v)
			{
				Intent intent = getPackageManager().getLaunchIntentForPackage("app.mainjh");
//다른 프로젝트의 패키지를 가져올 수 있게 해줍니다. 버튼을 누르면 TetrisPuzzle2 프로젝트의 app.mainjh 패키지를 불러옵니다.
				startActivity(intent);

			}
		});
		
		HardMode_btn.setOnClickListener(new OnClickListener() {			
			@Override
			public void onClick(View v)
			{
				Intent intent = getPackageManager().getLaunchIntentForPackage("app.main");
//다른 프로젝트의 패키지를 가져올 수 있게 해줍니다. 버튼을 누르면 TetrisPuzzle 프로젝트의 app.main 패키지를 불러옵니다.
				startActivity(intent);

				
			}
		});
    }



	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		// Inflate the menu; this adds items to the action bar if it is present.
		getMenuInflater().inflate(R.menu.level, menu);
		return true;
	}

}
------------------------------------------------------------------------
 * TetrisPuzzle 프로젝트와 TetrisPuzzle2 프로젝트의 코드는 사이즈 조절에만 차이가 있으므로 TetrisPuzzle의 코드를 설명하겠습니다.

[http://comp166-koreauniv.googlecode.com/files/tetrispuzzle1.png]
[http://comp166-koreauniv.googlecode.com/files/tetrispuzzle2.png]

1. app.main패키지
 1) Block 코드

package app.main;

import ryulib.graphic.Boundary;
import android.graphics.Point;

public class Block {
	
	public Block(int x, int y) {
		super();
		
		_Point.set(x, y);
		updateBoundary();
	}
	
	private Point _Point = new Point();
	private Boundary _Boundary = new Boundary(1, 1, Global.blockSize-2, Global.blockSize-2);
	
	public Point getPoint() {
		return _Point;
	}
	
	public int getX() {
		return _Point.x;
	}
	
	public int getY() {
		return _Point.y;
	}
	
	private void updateBoundary() {
		_Boundary.setBoundary(
			(_Point.x * Global.blockSize) + 1,
			(_Point.y * Global.blockSize) + 1,
			((_Point.x+1) * Global.blockSize) - 2,
			((_Point.y+1) * Global.blockSize) - 2
		);
	}

	public void decX(int value) {
		_Point.x = _Point.x - value;
		updateBoundary();
	}

	public void decY(int value) {
		_Point.y = _Point.y - value;
		updateBoundary();
	}

	public Boundary getBoundary() {
		return _Boundary;
	}

	private Boundary _BoundaryCopy = new Boundary(_Boundary);
	
	public Boundary getBoundary(int x, int y) {
		_BoundaryCopy.setBoundary(_Boundary);
		_BoundaryCopy.incLeft(x * Global.blockSize);
		_BoundaryCopy.incTop (y * Global.blockSize);
		
		return _BoundaryCopy;
	}

//blockSize는 퍼즐만들때 조각들을 이루는 작은 정사각형의 변의 크기이고, boardSize는 처음의 사각형이 배열될때 전체 정사각형의 
}